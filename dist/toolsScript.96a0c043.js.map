{"version":3,"sources":["toolsScript.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["openCloseCategoriesDiv","document","querySelector","categoryHeadingContainer","querySelectorAll","openCloseCategoriesDivText","chartButtonContainer","openOrCloseCategoryList","chartSelectionPanelContainer","openCategoryListIcon","classList","contains","remove","style","transform","add","addEventListener","categoryArrowOpen","categoryArrowClose","openOrCloseCategory","i","display","length","loadFirstDataDashboard","dataSubPageContainer","priceContainer","changeDisplayedDashboard","event","target","compareMarketCapContainer","volumePageContainer","console","log","dataDashboardSelectionBtn","forEach","button","dataPageContainer","dataPageOptions","rootMargin","threshold","marketsCryptoObserver","IntersectionObserver","entries","entry","isIntersecting","changeChartScale","autoChartOption","backgroundColor","logChartOption","chartScale","displayedChart","options","scales","y","type","update","getAssetList","fetch","assetListURL","response","json","assetListData","asset","id","assetID","listOptions","createElement","name","assetName","value","appendChild","createTextNode","assetListEl","changeAsset","changeDisplayedAsset","URL","selectedAssetID","selectedTimePeriod","data","prices","priceAndTimeData","time","epochTimeframe","formattedDate","Date","longTimeframe","toUTCString","timeframe","substring","chartTime","push","labels","fetchedPriceData","price","DataObject","label","selectedAssetName","fill","pointRadius","borderWidth","borderColor","yAxisID","assetPriceData","datasets","changeAssetEl","selectedOption","selectedIndex","error","changeTimeframe","fetchNewTimeframe","timeframeList","fetchData","addDataButton","selectedTimePeriodEl","ctx","Chart","position","responsive","maintainAspectRatio","grid","color","ticks","callback","index","values","toLocaleString","marketCryptoPriceContainer","observe","marketsStocksObserver","stockPriceChart","method","headers","ticker","myAPIkey","timeframeData","unorderedTimeframeData","timeSeries","timeSeriesData","reverse","stockPriceData","reversedFetchedPrice","priceSeriesData","allPriceDataObject","Object","allPrices","closePrices","closePrice","Number","dataObject","fetchStockList","changeColorOfInvestmentChart","InitialInvestmentValue","currentInvestmentValue","publicCompanyInvestmentReturns","selectedAsset","stockName","stockList","arrayNumber","innerHTML","names","optionEl","nameOfStock","fullTicker","justTicker","split","pop","singleticker","trim","publicStockHoldingFullName","selectedStock","text","publicStockHoldingTicker","nameofSelectedCryptoPublicCompany","UpperCaseSelectedAsset","charAt","toUpperCase","slice","firstCompanydata","companyTotalCryptoHoldings","unformattedTotalCryptoHoldings","totalCryptoHoldings","companyTotalUSDholdings","unformattedUsdHoldings","totalUsdHoldings","percentOfTotalSupply","let","publicStockChartTimeframe","changeHeldAsset","changeDisplayedStock","listOfCryptoCompanies","selectedStockTicker","reFetchCompanyData","selectedStockEl","selectedStockOrderValue","Array","from","stockNumberInArray","toString","companyCryptoHoldings","companyUsdHoldings","companyTotalUsdHoldings","percentOfTotalSupplyEl","investmentAmounts","initialInvestmentValue","chartBTCButton","chartETHButton","heldAssetByPublicCompanies","stockPriceCanvas","investmentReturnChart","beginAtZero","window","publicStockAssetHoldingChart","width","marketPublicstockChartContainer","marketsCompareMarketCapObserver","URLOne","firstSelectedAssetID","responseOne","dataOne","market_caps","marketcapAndTimeDataOne","URLTwo","secondSelectedAssetID","responseTwo","dataTwo","marketcapAndTimeDataTwo","marketCap","marketCaps","firstSelectedAssetName","missingZeroValues","fetchedPriceDataTwo","DataObjectTwo","secondSelectedAssetName","assetCountInArrayOne","assetCountInArrayTwo","assetListElOne","marketCapValuationOne","fullyDilutedValOne","percentFromATHOne","firstListOfCryptos","firstNumberInCryptoList","firstNumberInList","totalMarketCapOne","shortenedMarketCapOne","formattedTotalMarketCapOne","fullyDilutedvalOne","shortendedFullyDilutedValOne","formattedFullyDilutedValOne","percentFromAllTimeHighOne","Math","round","assetListElTwo","marketCapValuationTwo","fullyDilutedValTwo","percentFromATHTwo","secondListOfCryptos","secondNumberInCryptoList","secondNumberInList","totalMarketCapTwo","shortenedMarketCapTwo","formattedTotalMarketCapTwo","fullyDilutedvalTwo","shortendedFullyDilutedValTwo","formattedFullyDilutedValTwo","percentFromAllTimeHighTwo","reFetchAssetMetrics","changeAssetOne","changeAssetOneEl","changeAssetTwo","changeAssetTwoEl","assetOneCanvas","doughnutOne","hoverOffset","plugins","legend","assetTwoCanvas","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","JSON","parse","handled","assets","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","message","stack","overlay","createErrorOverlay","body","getElementById","stackTrace","innerText","getParents","modules","parents","k","d","dep","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"toolsScript.96a0c043.js","sourceRoot":"../src","sourcesContent":["  // CODE FOR THE CATEGORY LIST FUNCTION\n// display and hide the category list\nconst openCloseCategoriesDiv = document.querySelector('.openCloseCategoriesDiv');\nconst categoryHeadingContainer = document.querySelectorAll('.categoryHeadingContainer');\nconst openCloseCategoriesDivText = document.querySelector('.containerSignDiv');\nconst chartButtonContainer = document.querySelectorAll('.chartButtonContainer');\nfunction openOrCloseCategoryList() {\n\n  // variables\n  const chartSelectionPanelContainer = document.querySelector('.chartSelectionPanelContainer');\n  const openCategoryListIcon = document.querySelector('.fa-arrow-right-to-bracket');\n\n  if (openCloseCategoriesDiv.classList.contains('openCategoryList')) {\n    openCloseCategoriesDiv.classList.remove('openCategoryList');\n    chartSelectionPanelContainer.style.transform = 'translateX(-100%)';\n    openCategoryListIcon.style.transform = 'rotate(0deg)';\n    openCloseCategoriesDivText.style.transform = 'rotate(-90deg) translateY(0%)';\n  } else {\n    openCloseCategoriesDiv.classList.add('openCategoryList');\n    chartSelectionPanelContainer.style.transform = 'translateX(0%)';\n    openCategoryListIcon.style.transform = 'rotate(180deg)';\n    openCloseCategoriesDivText.style.transform = 'rotate(-90deg) translateY(-100%)';\n  }\n}\nopenCloseCategoriesDiv.addEventListener('click', openOrCloseCategoryList);\nopenCloseCategoriesDivText.addEventListener('click', openOrCloseCategoryList);\nfor (let i = 0; i < categoryHeadingContainer.length; i++) {\n\n  // variables\n  const categoryArrowOpen = document.querySelectorAll('.fa-arrow-down-short-wide');\n  const categoryArrowClose = document.querySelectorAll('.fa-arrow-up-short-wide');\n\n  // function to open or close the category\n  function openOrCloseCategory() {\n    if (chartButtonContainer[i].classList.contains('opened')) {\n      chartButtonContainer[i].classList.remove('opened');\n      categoryArrowOpen[i].style.display = 'none';\n      categoryArrowClose[i].style.display = 'block';\n\n    } else {\n      chartButtonContainer[i].classList.add('opened');\n      categoryArrowOpen[i].style.display = 'block';\n      categoryArrowClose[i].style.display = 'none';\n    }\n  };\n  categoryHeadingContainer[i].addEventListener('click', openOrCloseCategory);\n};\n\n// CHANGE PAGE TO SELECED DATA DASHBOARD\nfunction loadFirstDataDashboard() {\n  const dataSubPageContainer = document.querySelectorAll('.dataSubPageContainer');\n  for (let i = 0; i < dataSubPageContainer.length; i++) {\n    dataSubPageContainer[i].style.display = 'none';\n  };\n  const priceContainer = document.querySelector('.priceContainer');\n  priceContainer.style.display = 'flex';\n\n}\nloadFirstDataDashboard();\nfunction changeDisplayedDashboard(event) {\n  const dataSubPageContainer = document.querySelectorAll('.dataSubPageContainer');\n  for (let i = 0; i < dataSubPageContainer.length; i++) {\n    dataSubPageContainer[i].style.display = 'none';\n  };\n\n  if (event.target.classList.contains('priceHolingsBtn')) {\n    const priceContainer = document.querySelector('.priceContainer');\n    priceContainer.style.display = 'flex';\n  }\n  else if (event.target.classList.contains('compareMarketCapBtn')) {\n    const compareMarketCapContainer = document.querySelector('.compareMarketCapContainer');\n    compareMarketCapContainer.style.display = 'flex';\n  }\n  else if (event.target.classList.contains('marketVolumeBtn')) {\n    const volumePageContainer = document.querySelector('.volumePageContainer');\n    volumePageContainer.style.display = 'flex';\n  } \n  else {\n    console.log('no displayed charts available');\n  }\n};\nconst dataDashboardSelectionBtn = document.querySelectorAll('.dataDashboardSelectionBtn');\ndataDashboardSelectionBtn.forEach(button => {\n  button.addEventListener('click', changeDisplayedDashboard);\n  button.addEventListener('click', openOrCloseCategoryList);\n});\n\n\n\n  // START OF THE DATA PAGES -- START OF THE DATA PAGES -- START OF THE DATA PAGES\n  // START OF THE DATA PAGES -- START OF THE DATA PAGES -- START OF THE DATA PAGES\n\n  // the option for the intersection observer\nconst dataPageContainer = document.querySelectorAll('.dataSubPageContainer');\nconst dataPageOptions = {\n  rootMargin: \"0px\",\n  threshold: 0\n};\n\n  // MARKETS PAGE -- CRYPTOCURRENCY PRICES // -- CRYPTOCURRENCY PRICES // CRYPTOCURRENCY PRICES\nconst marketsCryptoObserver = new IntersectionObserver(function(entries, marketsCryptoObserver) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n\n      // CODE FOR CHANGING THE CHART SCALE\n      let chartScale = 'linear'; //logarithmic or linear\n      const autoChartOption = document.querySelector('.autoChartOption');\n      autoChartOption.addEventListener('click', changeChartScale)\n      const logChartOption = document.querySelector('.logChartOption');\n      logChartOption.addEventListener('click', changeChartScale);\n      function changeChartScale(event) {\n      if (event.target.classList.contains('autoChartOption')) {\n          autoChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.6)';\n          logChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.2)';\n          chartScale = 'linear';\n          displayedChart.options.scales.y.type = chartScale;\n          displayedChart.update();\n      } else {\n              autoChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.2)';\n              logChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.6)';\n              chartScale = 'logarithmic';\n              displayedChart.options.scales.y.type = chartScale;\n              displayedChart.update();\n          }\n      };\n\n      // variables for the chart\n      let chartTime = []; //fetched data\n      let selectedTimePeriod = '365';\n      let assetPriceData = []; //fetched data\n      let selectedAssetID = 'bitcoin';\n      let selectedAssetName = 'Bitcoin';\n\n      // fetch initial data\n      try {\n        async function fetchData() {\n          let URL = `https://api.coingecko.com/api/v3/coins/${selectedAssetID}/market_chart?vs_currency=usd&days=${selectedTimePeriod}`;\n          let response = await fetch(URL);\n          let data = await response.json();\n          let priceAndTimeData = await data.prices;\n\n          // adding the fetched time to the chart\n          for (const time of priceAndTimeData) {\n            let epochTimeframe = await time[0];\n            let formattedDate = new Date(epochTimeframe);\n            let longTimeframe = formattedDate.toUTCString();\n            let timeframe = longTimeframe.substring(5, 16);\n            chartTime.push(timeframe);\n          };\n          displayedChart.data.labels = chartTime;\n\n          // adding the fetched price to the chart\n          let fetchedPriceData = [];\n          for (const price of priceAndTimeData) {\n            let prices = await price[1];\n            fetchedPriceData.push(prices);\n          };\n          let DataObject = {\n            label: `Price of ${selectedAssetName}`,\n            data: fetchedPriceData,\n            fill: false,\n            pointRadius: 0,\n            borderWidth: 1,\n            backgroundColor: '#FFFFFF',\n            borderColor: '#FFFFFF',\n            yAxisID: 'y'\n          };\n          assetPriceData.push(DataObject);\n          displayedChart.data.datasets = assetPriceData;\n\n          // update the chart with data and time\n          displayedChart.update();\n        }\n        fetchData();\n      }\n      catch(error) {\n        console.log('could not fetch initial data...');\n      }\n\n        // generate list of assets\n      const assetListURL = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=1&sparkline=false';\n      const assetListEl = document.querySelector('.assetList');\n      const addDataButton = document.querySelector('.addDataButton');\n      async function getAssetList() {\n        try {\n            // fetch the list of assets\n            let response = await fetch(assetListURL);\n            let assetListData = await response.json();\n\n            for (const asset of assetListData) {\n                // for the ID \n                let assetID = await asset.id;\n                const listOptions = document.createElement('option');\n                listOptions.classList.add(assetID);\n\n                // for the display name\n                let assetName = await asset.name;\n                listOptions.value = await assetName;\n\n                // add option onto the dropdown selection\n                listOptions.appendChild(document.createTextNode(assetName));\n                assetListEl.appendChild(listOptions);\n            }\n        }\n        catch(error) {\n            console.log(error);\n            console.log('cannot get list of assets from CoinGecko...');\n        }\n      }\n      getAssetList();\n\n      // change asset\n      function changeAsset() {\n        try {\n\n          // clear old chart history\n          assetPriceData = [];\n          chartTime = [];\n          selectedAssetID = '';\n          selectedAssetName = '';\n\n              // change the data on the chart\n          const changeAssetEl = document.querySelector('.assetList');\n          let selectedOption = changeAssetEl.options[changeAssetEl.selectedIndex];\n          selectedAssetName = selectedOption.value;\n          selectedAssetID = selectedOption.classList[0];\n\n          async function changeDisplayedAsset() {\n            let URL = `https://api.coingecko.com/api/v3/coins/${selectedAssetID}/market_chart?vs_currency=usd&days=${selectedTimePeriod}`;\n            let response = await fetch(URL);\n            let data = await response.json();\n            let priceAndTimeData = await data.prices;\n  \n            // adding the fetched time to the chart\n            for (const time of priceAndTimeData) {\n              let epochTimeframe = await time[0];\n              let formattedDate = new Date(epochTimeframe);\n              let longTimeframe = formattedDate.toUTCString();\n              let timeframe = longTimeframe.substring(4, 16);\n              chartTime.push(timeframe);\n            };\n            displayedChart.data.labels = chartTime;\n  \n            // adding the fetched price to the chart\n            let fetchedPriceData = [];\n            for (const price of priceAndTimeData) {\n              let prices = await price[1];\n              fetchedPriceData.push(prices);\n            };\n            let DataObject = {\n              label: `Price of ${selectedAssetName}`,\n              data: fetchedPriceData,\n              fill: false,\n              pointRadius: 0,\n              borderWidth: 1,\n              backgroundColor: '#FFFFFF',\n              borderColor: '#FFFFFF',\n              yAxisID: 'y'\n            };\n            assetPriceData.push(DataObject);\n            displayedChart.data.datasets = assetPriceData;\n  \n            // update the chart with data and time\n            displayedChart.update();\n          };\n          changeDisplayedAsset();\n\n        } \n        catch(error) {\n          console.log('Could not add new asset to chart....')\n        }\n      }\n      const changeAssetEl = document.querySelector('.assetList');\n      changeAssetEl.addEventListener('change', changeAsset);\n\n\n      // change timeframe\n      function changeTimeframe() {\n        try {\n          selectedTimePeriod = '';\n          assetPriceData = [];\n          chartTime = [];\n\n          const timeframeList = document.querySelector('.timeframeList');\n          selectedTimePeriod = timeframeList.value;\n  \n          async function fetchNewTimeframe() {\n            let URL =  `https://api.coingecko.com/api/v3/coins/${selectedAssetID}/market_chart?vs_currency=usd&days=${selectedTimePeriod}`;\n            let response = await fetch(URL);\n            let data = await response.json();\n            let priceAndTimeData = await data.prices;\n\n            // adding the newly fetched time to the chart\n            for (const time of priceAndTimeData) {\n              let epochTimeframe = await time[0];\n              let formattedDate = new Date(epochTimeframe);\n              let longTimeframe = formattedDate.toUTCString();\n              let timeframe = longTimeframe.substring(4, 16);\n              chartTime.push(timeframe);\n            }\n            displayedChart.data.labels = chartTime;\n\n            // adding the fetched price to the chart\n            let fetchedPriceData = [];\n            for (const price of priceAndTimeData) {\n              let prices = await price[1];\n              fetchedPriceData.push(prices);\n            };\n            let DataObject = {\n              label: `Price of ${selectedAssetName}`,\n              data: fetchedPriceData,\n              fill: false,\n              pointRadius: 0,\n              borderWidth: 1,\n              backgroundColor: '#FFFFFF',\n              borderColor: '#FFFFFF',\n              yAxisID: 'y'\n            };\n            assetPriceData.push(DataObject);\n            displayedChart.data.datasets = assetPriceData;\n  \n            // update the chart with data and time\n            displayedChart.update();\n  \n          }\n          fetchNewTimeframe();\n  \n  \n        }\n        catch(error) {\n          console.log('could not fetch new timeframe data...');\n        }\n      }\n      const selectedTimePeriodEl = document.querySelector('.timeframeList');\n      selectedTimePeriodEl.addEventListener('change', changeTimeframe);\n      \n      // CODE FOR THE CHART.JS LIBRARY\n      const ctx = document.querySelector('.marketCryptoPrice');\n      let displayedChart = new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: chartTime,\n          datasets: assetPriceData,\n        },\n        options: {\n          type: chartScale,\n          display: true,\n          position: 'left',\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              grid: {\n                color: '#232323',\n              },\n              ticks: {\n                // Include a dollar sign in the ticks\n                callback: function(value, index, values) {\n                    return '$' + value.toLocaleString(\"en-US\");\n                }\n              }\n            }  \n          }\n        }\n      });\n      // end of the Intersection Observer\n    };\n  })\n}, dataPageOptions);\nconst marketCryptoPriceContainer = document.querySelector('.marketCryptocurrrencyChartContainer');\nmarketsCryptoObserver.observe(marketCryptoPriceContainer);\n\n  // MARKETS PAGE -- PUBLIC EXCHANGES, STAKERS & MINERS // MARKETS PAGE -- PUBLIC EXCHANGES, STAKERS & MINERS\nconst marketsStocksObserver = new IntersectionObserver(function(entries, marketsStocksObserver) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      const myAPIkey = 'GH9DTBAMAJL2HKD1';\n\n      // CODE FOR CHANGING THE CHART SCALE\n      let chartScale = 'logarithmic'; //logarithmic or linear\n      const autoChartOption = document.querySelector('.stockAutoChartOption');\n      autoChartOption.addEventListener('click', changeChartScale)\n      const logChartOption = document.querySelector('.stockLogChartOption');\n      logChartOption.addEventListener('click', changeChartScale);\n      function changeChartScale(event) {\n      if (event.target.classList.contains('autoChartOption')) {\n        autoChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.6)';\n        logChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.2)';\n        chartScale = 'linear';\n        stockPriceChart.options.scales.y.type = chartScale;\n        stockPriceChart.update();\n      } \n      else {\n        autoChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.2)';\n        logChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.6)';\n        chartScale = 'logarithmic';\n        stockPriceChart.options.scales.y.type = chartScale;\n        stockPriceChart.update();\n      }\n      };\n\n      // variables for price, time, and ticker\n      let timeframeData = [];\n      let stockPriceData = [];\n      let reversedFetchedPrice = [];\n      let fetchedPriceData = [];\n      let ticker = 'MSTR';\n\n      // INVESTMENT RETURN DATA AND CHART\n      let selectedAsset = 'bitcoin';\n      let investmentAmounts = [];\n      let backgroundColor = 'rgb(255,255,255, 0.15)';\n\n      let timeframe = 'TIME_SERIES_DAILY_ADJUSTED'; // TIME_SERIES_DAILY_ADJUSTED, TIME_SERIES_WEEKLY_ADJUSTED\n      let timeSeries = 'Time Series (Daily)'; // Time Series (Daily), Weekly Adjusted Time Series\n\n      // function to initially fetch the data\n      async function fetchData() {\n        try {\n          const options = {\n              method: 'GET',\n              headers: {\n                  'X-RapidAPI-Key': '5abcde3910mshe635fb57c055c0fp10d768jsna1801b9b4a77',\n                  'X-RapidAPI-Host': 'real-time-finance-data.p.rapidapi.com'\n              }\n          };\n\n          // Creating the URL and fetching the data\n          let URL = `https://www.alphavantage.co/query?function=${timeframe}&symbol=${ticker}&apikey=${myAPIkey}`;\n          let response = await fetch(URL);\n          let data = await response.json();\n\n          // to fetch timeframe\n          timeframeData = [];\n          let unorderedTimeframeData = [];\n          let timeSeriesData = await data[`${timeSeries}`];\n          for (const time in timeSeriesData) {  \n            unorderedTimeframeData.push(time);\n          }\n          timeframeData = unorderedTimeframeData.reverse();\n          stockPriceChart.data.labels = timeframeData;\n\n          // to fetch price data\n          stockPriceData = [];\n          reversedFetchedPrice = [];\n          fetchedPriceData = [];\n          let priceSeriesData = await data[`${timeSeries}`];\n          let allPriceDataObject = Object.values(priceSeriesData);\n          for (let i = 0; i < allPriceDataObject.length; i++) {\n            let allPrices = allPriceDataObject[`${i}`];\n            let closePrices = Object.values(allPrices);\n            let closePrice = Number(closePrices[4]);\n            reversedFetchedPrice.push(closePrice);\n          };\n          fetchedPriceData = reversedFetchedPrice.reverse();\n          \n          let dataObject = {\n            label: `Price of ${ticker}`,\n            data: fetchedPriceData,\n            fill: false,\n            pointRadius: 0,\n            borderWidth: 1,\n            backgroundColor: '#FFFFFF',\n            borderColor: '#FFFFFF',\n            yAxisID: 'y'\n          };\n          stockPriceData.push(dataObject);\n          stockPriceChart.data.datasets = stockPriceData;\n\n          // update chart\n          stockPriceChart.update();\n        } \n        catch(error) {\n          console.log(error);\n          console.log('could not fetch data');\n        };\n      };\n      fetchData();\n\n      async function fetchStockList() {\n\n        try {\n          let URL = `https://api.coingecko.com/api/v3/companies/public_treasury/${selectedAsset}`;\n\n          let response = await fetch(URL);\n          let data = await response.json();\n\n          // fetch the names of the stocks\n          let stockName = await data['companies'];\n          const stockList = document.querySelector('.stockList');\n          let arrayNumber = 0;\n          stockList.innerHTML = '';\n          for (const names of stockName) {\n            // create the element for the drop down list\n            const optionEl = document.createElement('option');\n            optionEl.classList.add(arrayNumber);\n            arrayNumber++;\n            let nameOfStock = names['name'];\n            optionEl.appendChild(document.createTextNode(nameOfStock));\n            let fullTicker = names['symbol'];\n            let justTicker = fullTicker.split(':').pop();\n            let singleticker = justTicker.trim();\n\n            // change necessary ticker names\n            if (singleticker == 'Hut-8') {\n              singleticker = 'HUT';\n            } else if (singleticker == '3659') {\n              singleticker = 'NEXOF';\n            } else if (singleticker == 'VYGR') {\n              singleticker = 'VYGVQ';\n            } else if (singleticker == 'BIGG') {\n              singleticker = 'BBKCF';\n            } else if (singleticker == 'DCC') {\n              singleticker = 'DGGXF';\n            } else if (singleticker == 'FORT') {\n              singleticker = 'FRTTF';\n            } else if (singleticker == 'MODE') {\n              singleticker = 'MODGF';\n            } else if (singleticker == 'DASH') {\n              singleticker = 'NPPTF';\n            }\n            optionEl.value = singleticker;\n\n            // if function to remove unnecessary stocks from the list\n            if (singleticker !== '1357' && singleticker !== 'AKER' && singleticker !== 'HODL' && singleticker !== 'BROOK') {\n              stockList.appendChild(optionEl);\n            };\n          }\n\n          // fetch the data on the text section\n          let publicStockHoldingFullName = document.querySelector('.publicStockHoldingFullName');\n          let selectedStock = stockList.options[stockList.selectedIndex].text;\n          publicStockHoldingFullName.innerHTML = selectedStock; \n          let publicStockHoldingTicker = document.querySelector('.publicStockHoldingTicker');\n          publicStockHoldingTicker.innerHTML = stockList.value;\n          let nameofSelectedCryptoPublicCompany = document.querySelector('.nameofSelectedCryptoPublicCompany');\n          let UpperCaseSelectedAsset = selectedAsset.charAt(0).toUpperCase() + selectedAsset.slice(1);\n          nameofSelectedCryptoPublicCompany.innerHTML = UpperCaseSelectedAsset;\n\n          // fetch the total holding data\n          let firstCompanydata = await data['companies'][0];\n          let companyTotalCryptoHoldings = document.querySelector('.companyTotalCryptoHoldings');\n          let unformattedTotalCryptoHoldings = await firstCompanydata['total_holdings'];\n          let totalCryptoHoldings = unformattedTotalCryptoHoldings.toLocaleString();\n          companyTotalCryptoHoldings.innerHTML = totalCryptoHoldings;\n          let companyTotalUSDholdings = document.querySelector('.companyTotalUSDholdings');\n          let unformattedUsdHoldings = await firstCompanydata['total_current_value_usd'];\n          let totalUsdHoldings = unformattedUsdHoldings.toLocaleString();\n          companyTotalUSDholdings.innerHTML = totalUsdHoldings;\n\n          // fetch the dominance and total supply\n          let percentOfTotalSupply = document.querySelector('.publicCompanyMarketCapDominance');\n          percentOfTotalSupply.innerHTML = firstCompanydata['percentage_of_total_supply'];\n\n          // fetch the investment returns\n          let InitialInvestmentValue = await stockName[0]['total_entry_value_usd'];\n          let = currentInvestmentValue = await stockName[0]['total_current_value_usd'];\n          publicCompanyInvestmentReturns.data.datasets.forEach(data => {\n            data.data.push(InitialInvestmentValue);\n            data.data.push(currentInvestmentValue);\n          });\n\n          function changeColorOfInvestmentChart() {\n            if (InitialInvestmentValue < currentInvestmentValue) {\n              backgroundColor = 'rgb(0,255,0, 0.15)';\n            } else {\n              backgroundColor = 'rgb(255,0,0, 0.15)';\n            }\n            publicCompanyInvestmentReturns.data.datasets.forEach(data => {\n              data.backgroundColor = backgroundColor;\n            });\n          };\n          changeColorOfInvestmentChart();\n\n          publicCompanyInvestmentReturns.update();\n        }\n        catch(error) {\n          console.log(error);\n          console.log('Could not fetch the list of stocks...')\n        }\n      };\n      fetchStockList();\n\n      // function to initially fetch the stock names and company data\n      function changeTimeframe() {\n\n        if (publicStockChartTimeframe.value == 'TIME_SERIES_DAILY_ADJUSTED') {\n          timeSeries = 'Time Series (Daily)'; // Time Series (Daily), Weekly Adjusted Time Series\n          timeframe = publicStockChartTimeframe.value;\n\n        } else {\n          timeSeries = 'Weekly Adjusted Time Series'; // Time Series (Daily), Weekly Adjusted Time Series\n          timeframe = publicStockChartTimeframe.value;\n        }\n        fetchData();\n        changeHeldAsset();\n        fetchStockList();\n      };\n      const publicStockChartTimeframe = document.querySelector('.publicStockTimeframeSelection');\n      publicStockChartTimeframe.addEventListener('change', changeTimeframe);\n\n      // change the displayed stock data and price action\n      function changeDisplayedStock() {\n        // for the stock chart\n        const listOfCryptoCompanies = document.querySelector('.listOfCryptoCompanies');\n        let selectedStockTicker = listOfCryptoCompanies.value;\n        ticker = selectedStockTicker;\n        fetchData();\n\n        // change company full name and ticker symbol\n        let selectedStock = listOfCryptoCompanies.options[listOfCryptoCompanies.selectedIndex].text;\n        let publicStockHoldingFullName = document.querySelector('.publicStockHoldingFullName');\n        publicStockHoldingFullName.innerHTML = selectedStock;\n        let publicStockHoldingTicker = document.querySelector('.publicStockHoldingTicker');\n        publicStockHoldingTicker.innerHTML = listOfCryptoCompanies.value;\n        let nameofSelectedCryptoPublicCompany = document.querySelector('.nameofSelectedCryptoPublicCompany');\n        nameofSelectedCryptoPublicCompany.innerHTML = selectedAsset.charAt(0).toUpperCase() + selectedAsset.slice(1);\n\n        // change the company holdings and % of total supply\n        async function reFetchCompanyData() {\n          try {\n\n            let URL = `https://api.coingecko.com/api/v3/companies/public_treasury/${selectedAsset}`;\n            let response = await fetch(URL);\n            let data = await response.json();\n            // for the stock number within the list\n            let selectedStockEl = listOfCryptoCompanies.options[listOfCryptoCompanies.selectedIndex];\n            let selectedStockOrderValue = Array.from(selectedStockEl.classList);\n            let stockNumberInArray = selectedStockOrderValue.toString();\n            // the crypto holdings\n            let companyCryptoHoldings = await data['companies'][stockNumberInArray]['total_holdings'];\n            let companyTotalCryptoHoldings = document.querySelector('.companyTotalCryptoHoldings');\n            companyTotalCryptoHoldings.innerHTML = companyCryptoHoldings.toLocaleString();\n            // the holdings in USD\n            let companyUsdHoldings = await data['companies'][stockNumberInArray]['total_current_value_usd'];\n            let companyTotalUsdHoldings = document.querySelector('.companyTotalUSDholdings');\n            companyTotalUsdHoldings.innerHTML = companyUsdHoldings.toLocaleString();\n\n            // the % of total supply\n            let percentOfTotalSupply = await data['companies'][stockNumberInArray]['percentage_of_total_supply'];\n            let percentOfTotalSupplyEl = document.querySelector('.publicCompanyMarketCapDominance');\n            percentOfTotalSupplyEl.innerHTML = percentOfTotalSupply;\n\n            // the investment value\n            investmentAmounts = [];\n            let initialInvestmentValue = await data['companies'][stockNumberInArray]['total_entry_value_usd'];\n            let currentInvestmentValue = await data['companies'][stockNumberInArray]['total_current_value_usd'];\n            investmentAmounts.push(initialInvestmentValue);\n            investmentAmounts.push(currentInvestmentValue);\n            publicCompanyInvestmentReturns.data.datasets[0].data = investmentAmounts;\n            if (initialInvestmentValue < currentInvestmentValue) {\n              backgroundColor = 'rgb(0,255,0, 0.15)';\n            } else {\n              backgroundColor = 'rgb(255,0,0, 0.15)';\n            }\n            publicCompanyInvestmentReturns.data.datasets[0].backgroundColor = backgroundColor;\n            publicCompanyInvestmentReturns.update();\n\n\n\n            console.log(investmentAmounts);\n  \n          }\n          catch(error) {\n            console.log(error);\n            console.log('Could not change displayed stock info...')\n          }\n        };\n        reFetchCompanyData();\n\n      };\n      const listOfCryptoCompanies = document.querySelector('.listOfCryptoCompanies');\n      listOfCryptoCompanies.addEventListener('change', changeDisplayedStock);\n\n      // if the user changes the held asset\n      const heldAssetByPublicCompanies = document.querySelectorAll('.heldAssetByPublicCompanies');\n      function changeHeldAsset(event) {\n        const chartBTCButton = document.querySelector('.chartBTCButton');\n        const chartETHButton = document.querySelector('.chartETHButton');\n        if (event.target.value == 'bitcoin') {\n          chartBTCButton.style.backgroundColor = 'rgb(128, 128, 128, 0.6)';\n          chartETHButton.style.backgroundColor = 'rgb(128, 128, 128, 0.2)';\n          selectedAsset = event.target.value;\n          changeDisplayedStock();\n        } else {\n          chartBTCButton.style.backgroundColor = 'rgb(128, 128, 128, 0.2)';\n          chartETHButton.style.backgroundColor = 'rgb(128, 128, 128, 0.6)';\n          selectedAsset = event.target.value;\n          changeDisplayedStock();\n        }\n\n      };\n      heldAssetByPublicCompanies.forEach(asset => {\n        asset.addEventListener('click', changeHeldAsset);\n      });\n\n      // CODE FOR THE MAIN PRICE CHART\n      const stockPriceCanvas = document.querySelector('.marketStockPrice');\n      let stockPriceChart = new Chart(stockPriceCanvas, {\n        type: 'line',\n        data: {\n          labels: timeframeData,\n          datasets: stockPriceData,\n        },\n        options: {\n          type: chartScale,\n          display: true,\n          position: 'left',\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              grid: {\n                color: '#232323',\n              },\n              ticks: {\n                callback: function(value, index, values) {\n                  return '$' + value.toLocaleString(\"en-US\");\n                }\n              }\n            }\n          }\n        }\n      });\n\n      // CODE FOR THE INVESTMENT RETURN CHART\n      const investmentReturnChart = document.querySelector('.publicStockAssetHoldingChart');\n      let publicCompanyInvestmentReturns = new Chart(investmentReturnChart, {\n        type: 'line',\n        data: {\n          labels: ['Initial Investment', 'Current Value'],\n          datasets: [{\n            label: 'Gain/Loss',\n            data: investmentAmounts,\n            fill: true,\n            pointRadius: 0,\n            borderWidth: 1,\n            backgroundColor: backgroundColor,\n            borderColor: '#FFFFFF',\n          }]\n        },\n        options: {\n          type: 'logarithmic',\n          display: true,\n          position: 'left',\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              grid: {\n                color: '#232323',\n              },\n              ticks: {\n                beginAtZero: false,\n                callback: function(value, index, values) {\n                  return '$' + value / 1e6 + ' ' + 'M';\n                }\n              }\n            }\n          }\n        }\n      });\n      window.addEventListener(\"resize\", (event) => {\n        const publicStockAssetHoldingChart = document.querySelector('.publicStockAssetHoldingChart');\n        publicStockAssetHoldingChart.style.width = '100%';\n      });\n\n\n\n\n    // End of the if statement for the intersection observer\n    }\n  })\n}, dataPageOptions);\nconst marketPublicstockChartContainer = document.querySelector('.marketPublicstockChartContainer');\nmarketsStocksObserver.observe(marketPublicstockChartContainer);\n\n\n  // MARKETS PAGE -- COMPARE MARKET CAPS // COMPARE MARKET CAPS // COMPARE MARKET CAPS\nconst marketsCompareMarketCapObserver = new IntersectionObserver(function(entries, marketsCompareMarketCapObserver) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n\n      // CODE FOR CHANGING THE CHART SCALE\n      let chartScale = 'linear'; //logarithmic or linear\n      const autoChartOption = document.querySelector('.marketCapAutoChartOption');\n      autoChartOption.addEventListener('click', changeChartScale)\n      const logChartOption = document.querySelector('.marketCaplogChartOption');\n      logChartOption.addEventListener('click', changeChartScale);\n      function changeChartScale(event) {\n      if (event.target.classList.contains('autoChartOption')) {\n          autoChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.6)';\n          logChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.2)';\n          chartScale = 'linear';\n          displayedChart.options.scales.y.type = chartScale;\n          displayedChart.update();\n      } else {\n              autoChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.2)';\n              logChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.6)';\n              chartScale = 'logarithmic';\n              displayedChart.options.scales.y.type = chartScale;\n              displayedChart.update();\n          }\n      };\n\n      // variables for timeframe\n      let chartTime = []; //fetched data\n      let selectedTimePeriod = '365';\n\n      // variables for selected assets\n      let assetPriceData = []; //fetched data\n      let firstSelectedAssetID = 'bitcoin';\n      let firstSelectedAssetName = 'Bitcoin';\n      let secondSelectedAssetID = 'ethereum';\n      let secondSelectedAssetName = 'Ethereum';\n\n      // fetch initial data\n      async function fetchData() {\n          try {\n          // FETCH ASSET 1 DATA -- FETCH ASSET 1 DATA \n          let URLOne = `https://api.coingecko.com/api/v3/coins/${firstSelectedAssetID}/market_chart?vs_currency=usd&days=${selectedTimePeriod}`;\n          let responseOne = await fetch(URLOne);\n          let dataOne = await responseOne.json();\n          let marketcapAndTimeDataOne = await dataOne.market_caps;\n\n          // FETCH ASSET 2 DATA -- FETCH ASSET 2 DATA\n          let URLTwo = `https://api.coingecko.com/api/v3/coins/${secondSelectedAssetID}/market_chart?vs_currency=usd&days=${selectedTimePeriod}`;\n          let responseTwo = await fetch(URLTwo);\n          let dataTwo = await responseTwo.json();\n          let marketcapAndTimeDataTwo = await dataTwo.market_caps;\n\n          // ADD LONGEST TIMEFRAME\n          if (marketcapAndTimeDataOne.length > marketcapAndTimeDataTwo.length) {\n            // clear old data from chart\n            chartTime = [];\n            assetPriceData = [];\n            \n            // adding the fetched time to the chart\n            for (const time of marketcapAndTimeDataOne) {\n              let epochTimeframe = await time[0];\n              let formattedDate = new Date(epochTimeframe);\n              let longTimeframe = formattedDate.toUTCString();\n              let timeframe = longTimeframe.substring(5, 16);\n              chartTime.push(timeframe);\n            };\n\n            // ADD ASSET 1 DATA -- ADD ASSET 1 DATA\n            let fetchedPriceData = [];\n            for (const marketCap of marketcapAndTimeDataOne) {\n              let marketCaps = await marketCap[1];\n              fetchedPriceData.push(marketCaps);\n            };\n            let DataObject = {\n              label: `Price of ${firstSelectedAssetName}`,\n              data: fetchedPriceData,\n              fill: false,\n              pointRadius: 0,\n              borderWidth: 1,\n              backgroundColor: '#FFFFFF',\n              borderColor: '#FFFFFF',\n              yAxisID: 'y'\n            };\n            assetPriceData.push(DataObject);\n\n            // ADD ASSET 2 DATA -- ADD ASSET 2 DATA\n            let missingZeroValues = marketcapAndTimeDataOne.length - marketcapAndTimeDataTwo.length;\n            let fetchedPriceDataTwo = [];\n            for (let i = 0; i < missingZeroValues; i++) {\n              fetchedPriceDataTwo.push('');\n            };\n\n            for (const marketCap of marketcapAndTimeDataTwo) {\n              let marketCaps = await marketCap[1];\n              fetchedPriceDataTwo.push(marketCaps);\n            };\n            let DataObjectTwo = {\n              label: `Price of ${secondSelectedAssetName}`,\n              data: fetchedPriceDataTwo,\n              fill: false,\n              pointRadius: 0,\n              borderWidth: 1,\n              backgroundColor: '#FF0000',\n              borderColor: '#FF0000',\n              yAxisID: 'y'\n            };\n            assetPriceData.push(DataObjectTwo);\n          } else {\n            // clear old data from chart\n            chartTime = [];\n            assetPriceData = [];\n\n            // adding the fetched time to the chart\n            for (const time of marketcapAndTimeDataTwo) {\n              let epochTimeframe = await time[0];\n              let formattedDate = new Date(epochTimeframe);\n              let longTimeframe = formattedDate.toUTCString();\n              let timeframe = longTimeframe.substring(5, 16);\n              chartTime.push(timeframe);\n            };\n\n            // ADD ASSET 1 DATA -- ADD ASSET 1 DATA\n            let fetchedPriceData = [];\n            let missingZeroValues = marketcapAndTimeDataTwo.length - marketcapAndTimeDataOne.length;\n            for (let i = 0; i < missingZeroValues; i++) {\n              fetchedPriceData.push('');\n            };\n            for (const marketCap of marketcapAndTimeDataOne) {\n              let marketCaps = await marketCap[1];\n              fetchedPriceData.push(marketCaps);\n            };\n            let DataObject = {\n              label: `Price of ${firstSelectedAssetName}`,\n              data: fetchedPriceData,\n              fill: false,\n              pointRadius: 0,\n              borderWidth: 1,\n              backgroundColor: '#FFFFFF',\n              borderColor: '#FFFFFF',\n              yAxisID: 'y'\n            };\n            assetPriceData.push(DataObject);\n\n            // ADD ASSET 2 DATA -- ADD ASSET 2 DATA\n            let fetchedPriceDataTwo = [];\n            for (const marketCap of marketcapAndTimeDataTwo) {\n              let marketCaps = await marketCap[1];\n              fetchedPriceDataTwo.push(marketCaps);\n            };\n            let DataObjectTwo = {\n              label: `Price of ${secondSelectedAssetName}`,\n              data: fetchedPriceDataTwo,\n              fill: false,\n              pointRadius: 0,\n              borderWidth: 1,\n              backgroundColor: '#FF0000',\n              borderColor: '#FF0000',\n              yAxisID: 'y'\n            };\n            assetPriceData.push(DataObjectTwo);\n          };\n\n\n          // UPDATE CHART WITH DATA\n          displayedChart.data.datasets = assetPriceData;\n          displayedChart.data.labels = chartTime;\n          displayedChart.update();\n        }\n        catch(error) {\n          console.log('could not fetch initial data...');\n        }\n      }\n      fetchData();\n\n        // generate list of assets and add market cap metrics\n      const assetListURL = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=1&sparkline=false';\n      const assetListElOne = document.querySelector('.cryptoCompareAssetListOne');\n      const assetListElTwo = document.querySelector('.cryptoCompareAssetListTwo');\n      async function getAssetList() {\n        try {\n          // the number of the asset inside the array\n          let assetCountInArrayOne = 0;\n          let assetCountInArrayTwo = 0;\n\n          // fetch the list of assets\n          let response = await fetch(assetListURL);\n          let assetListData = await response.json();\n\n          console.log(assetListData);\n\n          // ASSET 1 DATA\n          for (const asset of assetListData) {\n            // for the ID \n            let assetID = await asset.id;\n            const listOptions = document.createElement('option');\n            listOptions.classList.add(assetID);\n            listOptions.classList.add(assetCountInArrayOne);\n            assetCountInArrayOne++;\n\n            // for the display name\n            let assetName = await asset.name;\n            listOptions.value = await assetName;\n\n            // add option onto the dropdown selection\n            listOptions.appendChild(document.createTextNode(assetName));\n            // add element to lists\n            assetListElOne.appendChild(listOptions);\n          }\n          // variables for the asset metrics within panel\n          let marketCapValuationOne = document.querySelector('.marketCapValuationOne');\n          let fullyDilutedValOne = document.querySelector('.fullyDilutedValOne');\n          let percentFromATHOne = document.querySelector('.percentFromATHOne');\n\n          // getting the number within the array\n          let firstListOfCryptos = document.querySelector('.cryptoCompareAssetListOne');\n          let firstNumberInCryptoList = firstListOfCryptos.options[firstListOfCryptos.selectedIndex];\n          let firstNumberInList = firstNumberInCryptoList.classList[1];\n\n          // is it in the millions or billions\n          let totalMarketCapOne = assetListData[firstNumberInList]['market_cap'];\n          if (totalMarketCapOne > 1000000000) {\n            // market cap\n            let shortenedMarketCapOne = totalMarketCapOne / 1000000000;\n            let formattedTotalMarketCapOne = shortenedMarketCapOne.toLocaleString();\n            marketCapValuationOne.innerHTML = `$ ${formattedTotalMarketCapOne} B`;\n\n            // fully diluted valuation\n            let fullyDilutedvalOne = assetListData[firstNumberInList]['fully_diluted_valuation'];\n            let shortendedFullyDilutedValOne = (fullyDilutedvalOne / 1000000000).toLocaleString();\n            let formattedFullyDilutedValOne = `$ ${shortendedFullyDilutedValOne} B`;\n            fullyDilutedValOne.innerHTML = formattedFullyDilutedValOne;\n          } else {\n            // market cap\n            let totalMarketCapOne = assetListData[firstNumberInList]['market_cap'];\n            let shortenedMarketCapOne = totalMarketCapOne / 1000000000;\n            let formattedTotalMarketCapOne = shortenedMarketCapOne.toLocaleString();\n            marketCapValuationOne.innerHTML = `$ ${formattedTotalMarketCapOne} M`;\n\n            // fully diluted valuation\n            let fullyDilutedvalOne = assetListData[firstNumberInList]['fully_diluted_valuation'];\n            let shortendedFullyDilutedValOne = (fullyDilutedvalOne / 1000000000).toLocaleString();\n            let formattedFullyDilutedValOne = `$ ${shortendedFullyDilutedValOne} M`;\n            fullyDilutedValOne.innerHTML = formattedFullyDilutedValOne;\n          }\n          // % from all time high\n          let percentFromAllTimeHighOne = assetListData[firstNumberInList]['ath_change_percentage'];\n          percentFromATHOne.innerHTML = `% from ATH: ${Math.round(percentFromAllTimeHighOne.toLocaleString())}%`;\n\n          // ASSET 2 DATA\n          for (const asset of assetListData) {\n            // for the ID \n            let assetID = await asset.id;\n            const listOptions = document.createElement('option');\n            listOptions.classList.add(assetID);\n            listOptions.classList.add(assetCountInArrayTwo);\n            assetCountInArrayTwo++;\n\n            // for the display name\n            let assetName = await asset.name;\n            listOptions.value = await assetName;\n\n            // add option onto the dropdown selection\n            listOptions.appendChild(document.createTextNode(assetName));\n            // add element to lists\n            assetListElTwo.appendChild(listOptions);\n          }\n          assetListElTwo.selectedIndex = 1;\n\n          let marketCapValuationTwo = document.querySelector('.marketCapValuationTwo');\n          let fullyDilutedValTwo = document.querySelector('.fullyDilutedValTwo');\n          let percentFromATHTwo = document.querySelector('.percentFromATHTwo');\n\n          let secondListOfCryptos = document.querySelector('.cryptoCompareAssetListTwo');\n          let secondNumberInCryptoList = secondListOfCryptos.options[secondListOfCryptos.selectedIndex];\n          let secondNumberInList = secondNumberInCryptoList.classList[1];\n\n          // is it in the millions or billions\n          let totalMarketCapTwo = assetListData[secondNumberInList]['market_cap'];\n          if (totalMarketCapTwo > 1000000000) {\n            // market cap\n            let shortenedMarketCapTwo = totalMarketCapTwo / 1000000000;\n            let formattedTotalMarketCapTwo = shortenedMarketCapTwo.toLocaleString();\n            marketCapValuationTwo.innerHTML = `$ ${formattedTotalMarketCapTwo} B`;\n\n            // fully diluted valuation\n            let fullyDilutedvalTwo = assetListData[secondNumberInList]['fully_diluted_valuation'];\n            let shortendedFullyDilutedValTwo = (fullyDilutedvalTwo / 1000000000).toLocaleString();\n            let formattedFullyDilutedValTwo = `$ ${shortendedFullyDilutedValTwo} B`;\n            fullyDilutedValTwo.innerHTML = formattedFullyDilutedValTwo;\n          } else {\n            // market cap\n            let totalMarketCapTwo = assetListData[secondNumberInList]['market_cap'];\n            let shortenedMarketCapTwo = totalMarketCapTwo / 1000000000;\n            let formattedTotalMarketCapTwo = shortenedMarketCapTwo.toLocaleString();\n            marketCapValuationTwo.innerHTML = `$ ${formattedTotalMarketCapTwo} M`;\n\n            // fully diluted valuation\n            let fullyDilutedvalTwo = assetListData[secondNumberInList]['fully_diluted_valuation'];\n            let shortendedFullyDilutedValTwo = (fullyDilutedvalTwo / 1000000000).toLocaleString();\n            let formattedFullyDilutedValTwo = `$ ${shortendedFullyDilutedValTwo} M`;\n            fullyDilutedValTwo.innerHTML = formattedFullyDilutedValTwo;\n          }\n          // % from all time high\n          let percentFromAllTimeHighTwo = assetListData[secondNumberInList]['ath_change_percentage'];\n          percentFromATHTwo.innerHTML = `% from ATH: ${Math.round(percentFromAllTimeHighTwo.toLocaleString())}%`;\n        }\n        catch(error) {\n            console.log(error);\n            console.log('cannot get list of assets from CoinGecko...');\n        }\n      }\n      getAssetList();\n\n      async function reFetchAssetMetrics() {\n        try {\n\n          // re-fetch the list of assets\n          let response = await fetch(assetListURL);\n          let assetListData = await response.json();\n\n          // ASSET 1 DATA\n          // variables for the asset metrics within panel\n          let marketCapValuationOne = document.querySelector('.marketCapValuationOne');\n          let fullyDilutedValOne = document.querySelector('.fullyDilutedValOne');\n          let percentFromATHOne = document.querySelector('.percentFromATHOne');\n\n          // getting the number within the array\n          let firstListOfCryptos = document.querySelector('.cryptoCompareAssetListOne');\n          let firstNumberInCryptoList = firstListOfCryptos.options[firstListOfCryptos.selectedIndex];\n          let firstNumberInList = firstNumberInCryptoList.classList[1];\n\n          // is it in the millions or billions\n          let totalMarketCapOne = assetListData[firstNumberInList]['market_cap'];\n          if (totalMarketCapOne > 1000000000) {\n            // market cap\n            let shortenedMarketCapOne = totalMarketCapOne / 1000000000;\n            let formattedTotalMarketCapOne = shortenedMarketCapOne.toLocaleString();\n            marketCapValuationOne.innerHTML = `${formattedTotalMarketCapOne} B`;\n\n            // fully diluted valuation\n            let fullyDilutedvalOne = assetListData[firstNumberInList]['fully_diluted_valuation'];\n            let shortendedFullyDilutedValOne = (fullyDilutedvalOne / 1000000000).toLocaleString();\n            let formattedFullyDilutedValOne = `${shortendedFullyDilutedValOne} B`;\n            fullyDilutedValOne.innerHTML = formattedFullyDilutedValOne;\n          } else {\n            // market cap\n            let totalMarketCapOne = assetListData[firstNumberInList]['market_cap'];\n            let shortenedMarketCapOne = totalMarketCapOne / 1000000000;\n            let formattedTotalMarketCapOne = shortenedMarketCapOne.toLocaleString();\n            marketCapValuationOne.innerHTML = `${formattedTotalMarketCapOne} M`;\n\n            // fully diluted valuation\n            let fullyDilutedvalOne = assetListData[firstNumberInList]['fully_diluted_valuation'];\n            let shortendedFullyDilutedValOne = (fullyDilutedvalOne / 1000000000).toLocaleString();\n            let formattedFullyDilutedValOne = `${shortendedFullyDilutedValOne} M`;\n            fullyDilutedValOne.innerHTML = formattedFullyDilutedValOne;\n          }\n          // % from all time high\n          let percentFromAllTimeHighOne = assetListData[firstNumberInList]['ath_change_percentage'];\n          percentFromATHOne.innerHTML = `% from ATH: ${Math.round(percentFromAllTimeHighOne.toLocaleString())}%`;\n\n          // ASSET 2 DATA\n          let marketCapValuationTwo = document.querySelector('.marketCapValuationTwo');\n          let fullyDilutedValTwo = document.querySelector('.fullyDilutedValTwo');\n          let percentFromATHTwo = document.querySelector('.percentFromATHTwo');\n\n          let secondListOfCryptos = document.querySelector('.cryptoCompareAssetListTwo');\n          let secondNumberInCryptoList = secondListOfCryptos.options[secondListOfCryptos.selectedIndex];\n          let secondNumberInList = secondNumberInCryptoList.classList[1];\n\n          // is it in the millions or billions\n          let totalMarketCapTwo = assetListData[secondNumberInList]['market_cap'];\n          if (totalMarketCapTwo > 1000000000) {\n            // market cap\n            let shortenedMarketCapTwo = totalMarketCapTwo / 1000000000;\n            let formattedTotalMarketCapTwo = shortenedMarketCapTwo.toLocaleString();\n            marketCapValuationTwo.innerHTML = `${formattedTotalMarketCapTwo} B`;\n\n            // fully diluted valuation\n            let fullyDilutedvalTwo = assetListData[secondNumberInList]['fully_diluted_valuation'];\n            let shortendedFullyDilutedValTwo = (fullyDilutedvalTwo / 1000000000).toLocaleString();\n            let formattedFullyDilutedValTwo = `${shortendedFullyDilutedValTwo} B`;\n            fullyDilutedValTwo.innerHTML = formattedFullyDilutedValTwo;\n          } else {\n            // market cap\n            let totalMarketCapTwo = assetListData[secondNumberInList]['market_cap'];\n            let shortenedMarketCapTwo = totalMarketCapTwo / 1000000000;\n            let formattedTotalMarketCapTwo = shortenedMarketCapTwo.toLocaleString();\n            marketCapValuationTwo.innerHTML = `${formattedTotalMarketCapTwo} M`;\n\n            // fully diluted valuation\n            let fullyDilutedvalTwo = assetListData[secondNumberInList]['fully_diluted_valuation'];\n            let shortendedFullyDilutedValTwo = (fullyDilutedvalTwo / 1000000000).toLocaleString();\n            let formattedFullyDilutedValTwo = `${shortendedFullyDilutedValTwo} M`;\n            fullyDilutedValTwo.innerHTML = formattedFullyDilutedValTwo;\n          }\n          // % from all time high\n          let percentFromAllTimeHighTwo = assetListData[secondNumberInList]['ath_change_percentage'];\n          percentFromATHTwo.innerHTML = `% from ATH: ${Math.round(percentFromAllTimeHighTwo.toLocaleString())}%`;\n        }\n        catch(error) {\n            console.log(error);\n            console.log('cannot get list of assets from CoinGecko...');\n        }\n      }\n\n      // change timeframe\n      function changeTimeframe() {\n        selectedTimePeriod = '';\n        assetPriceData = [];\n        chartTime = [];\n\n        selectedTimePeriod = selectedTimePeriodEl.value;\n        fetchData();\n      }\n      const selectedTimePeriodEl = document.querySelector('.compareMarketCapTimeframeList');\n      selectedTimePeriodEl.addEventListener('change', changeTimeframe);\n\n      // change asset  -- asset 1\n      function changeAssetOne(event) {\n        let selectedOption = changeAssetOneEl.options[changeAssetOneEl.selectedIndex];\n        firstSelectedAssetID = selectedOption.classList[0];\n        firstSelectedAssetName = selectedOption.value;\n        fetchData();\n        reFetchAssetMetrics();\n      }\n      const changeAssetOneEl = document.querySelector('.cryptoCompareAssetListOne');\n      changeAssetOneEl.addEventListener('change', changeAssetOne);\n      // change asset -- asset 2\n      function changeAssetTwo(event) {\n        let selectedOption = changeAssetTwoEl.options[changeAssetTwoEl.selectedIndex];\n        secondSelectedAssetID = selectedOption.classList[0];\n        secondSelectedAssetName = selectedOption.value;\n        fetchData();\n        reFetchAssetMetrics();\n      }\n      const changeAssetTwoEl = document.querySelector('.cryptoCompareAssetListTwo');\n      changeAssetTwoEl.addEventListener('change', changeAssetTwo);\n      \n      // CODE FOR THE CHART.JS LIBRARY\n      const ctx = document.querySelector('.marketCryptoCap');\n      let displayedChart = new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: chartTime,\n          datasets: assetPriceData,\n        },\n        options: {\n          type: chartScale,\n          display: true,\n          position: 'left',\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              grid: {\n                color: '#232323',\n              },\n              ticks: {\n                // Include a dollar sign in the ticks\n                callback: function(value, index, values) {\n                  return '$' + value / 1e9 + ' ' + 'B';\n                }\n            }\n            }\n          }\n        }\n      });\n\n\n\n      // CODE FOR DOMINANCE CHART ASSET 1 -- ASSET 1 CHART\n      const assetOneCanvas = document.querySelector('.marketCapDominanceAssetOne');\n      let doughnutOne = new Chart(assetOneCanvas, {\n        type: 'doughnut',\n        data: {\n          labels: ['Red', 'Blue', 'Yellow'],\n          datasets: [{\n            data: [300, 50, 100],\n            backgroundColor: [\n              'rgb(255, 99, 132)',\n              'rgb(54, 162, 235)',\n              'rgb(255, 205, 86)'\n            ],\n            hoverOffset: 24\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              display: true,\n              position: 'bottom',\n            }\n          }\n        }\n      })\n\n      // CODE FOR DOMINANCE CHART ASSET 2 -- ASSET 2 CHART\n      const assetTwoCanvas = document.querySelector('.marketCapDominanceAssetTwo');\n\n    // end of the Intersection Observer\n    }\n  })\n}, dataPageOptions);\nconst compareMarketCapContainer = document.querySelector('.compareMarketCapContainer');\nmarketsCompareMarketCapObserver.observe(compareMarketCapContainer);\n\n\n\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}