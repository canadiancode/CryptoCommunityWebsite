{"version":3,"sources":["toolsScript.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["openCloseCategoriesDiv","document","querySelector","categoryHeadingContainer","querySelectorAll","openCloseCategoriesDivText","chartButtonContainer","openOrCloseCategoryList","chartSelectionPanelContainer","openCategoryListIcon","classList","contains","remove","style","transform","add","addEventListener","categoryArrowOpen","categoryArrowClose","openOrCloseCategory","i","display","length","dataPageContainer","dataPageOptions","rootMargin","threshold","marketsCryptoObserver","IntersectionObserver","entries","forEach","entry","isIntersecting","changeChartScale","event","target","autoChartOption","backgroundColor","logChartOption","chartScale","displayedChart","options","scales","y","type","update","getAssetList","fetch","assetListURL","response","json","assetListData","asset","id","assetID","listOptions","createElement","name","assetName","value","appendChild","createTextNode","assetListEl","console","log","changeAsset","changeDisplayedAsset","URL","selectedAssetID","selectedTimePeriod","data","prices","priceAndTimeData","time","epochTimeframe","formattedDate","Date","longTimeframe","toUTCString","timeframe","substring","chartTime","push","labels","fetchedPriceData","price","DataObject","label","selectedAssetName","fill","pointRadius","borderWidth","borderColor","yAxisID","assetPriceData","datasets","changeAssetEl","selectedOption","selectedIndex","error","changeTimeframe","fetchNewTimeframe","timeframeList","fetchData","addDataButton","selectedTimePeriodEl","ctx","Chart","position","responsive","maintainAspectRatio","grid","color","ticks","callback","index","values","toLocaleString","marketCryptoPriceContainer","observe","marketsStocksObserver","stockPriceChart","method","headers","ticker","myAPIkey","timeframeData","unorderedTimeframeData","timeSeries","timeSeriesData","reverse","stockPriceData","reversedFetchedPrice","priceSeriesData","allPriceDataObject","Object","allPrices","closePrices","closePrice","Number","dataObject","fetchStockList","changeColorOfInvestmentChart","InitialInvestmentValue","currentInvestmentValue","publicCompanyInvestmentReturns","selectedAsset","stockName","stockList","arrayNumber","names","optionEl","nameOfStock","fullTicker","justTicker","split","pop","singleticker","trim","publicStockHoldingFullName","selectedStock","text","innerHTML","publicStockHoldingTicker","nameofSelectedCryptoPublicCompany","UpperCaseSelectedAsset","charAt","toUpperCase","slice","firstCompanydata","companyTotalCryptoHoldings","unformattedTotalCryptoHoldings","totalCryptoHoldings","companyTotalUSDholdings","unformattedUsdHoldings","totalUsdHoldings","percentOfTotalSupply","let","publicStockChartTimeframe","changeHeldAsset","changeDisplayedStock","listOfCryptoCompanies","selectedStockTicker","reFetchCompanyData","selectedStockEl","selectedStockOrderValue","Array","from","stockNumberInArray","toString","companyCryptoHoldings","companyUsdHoldings","companyTotalUsdHoldings","percentOfTotalSupplyEl","investmentAmounts","initialInvestmentValue","chartBTCButton","chartETHButton","nameOfPublicCompany","heldAssetByPublicCompanies","stockPriceCanvas","investmentReturnChart","beginAtZero","window","publicStockAssetHoldingChart","width","marketPublicstockChartContainer","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","JSON","parse","handled","assets","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","message","stack","overlay","createErrorOverlay","body","getElementById","stackTrace","innerText","getParents","modules","parents","k","d","dep","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"toolsScript.96a0c043.js","sourceRoot":"../src","sourcesContent":["  // CODE FOR THE CATEGORY LIST FUNCTION\n// display and hide the category list\nconst openCloseCategoriesDiv = document.querySelector('.openCloseCategoriesDiv');\nconst categoryHeadingContainer = document.querySelectorAll('.categoryHeadingContainer');\nconst openCloseCategoriesDivText = document.querySelector('.containerSignDiv');\nconst chartButtonContainer = document.querySelectorAll('.chartButtonContainer');\nfunction openOrCloseCategoryList() {\n\n  // variables\n  const chartSelectionPanelContainer = document.querySelector('.chartSelectionPanelContainer');\n  const openCategoryListIcon = document.querySelector('.fa-arrow-right-to-bracket');\n\n  if (openCloseCategoriesDiv.classList.contains('openCategoryList')) {\n    openCloseCategoriesDiv.classList.remove('openCategoryList');\n    chartSelectionPanelContainer.style.transform = 'translateX(-100%)';\n    openCategoryListIcon.style.transform = 'rotate(0deg)';\n    openCloseCategoriesDivText.style.transform = 'rotate(-90deg) translateY(0%)';\n  } else {\n    openCloseCategoriesDiv.classList.add('openCategoryList');\n    chartSelectionPanelContainer.style.transform = 'translateX(0%)';\n    openCategoryListIcon.style.transform = 'rotate(180deg)';\n    openCloseCategoriesDivText.style.transform = 'rotate(-90deg) translateY(-100%)';\n  }\n}\nopenCloseCategoriesDiv.addEventListener('click', openOrCloseCategoryList);\nopenCloseCategoriesDivText.addEventListener('click', openOrCloseCategoryList);\nfor (let i = 0; i < categoryHeadingContainer.length; i++) {\n\n  // variables\n  const categoryArrowOpen = document.querySelectorAll('.fa-arrow-down-short-wide');\n  const categoryArrowClose = document.querySelectorAll('.fa-arrow-up-short-wide');\n\n  // function to open or close the category\n  function openOrCloseCategory() {\n    if (chartButtonContainer[i].classList.contains('opened')) {\n      chartButtonContainer[i].classList.remove('opened');\n      categoryArrowOpen[i].style.display = 'none';\n      categoryArrowClose[i].style.display = 'block';\n\n    } else {\n      chartButtonContainer[i].classList.add('opened');\n      categoryArrowOpen[i].style.display = 'block';\n      categoryArrowClose[i].style.display = 'none';\n    }\n  };\n  categoryHeadingContainer[i].addEventListener('click', openOrCloseCategory);\n};\n\n  // START OF THE DATA PAGES // START OF THE DATA PAGES // START OF THE DATA PAGES\nconst dataPageContainer = document.querySelectorAll('.dataSubPageContainer');\nconst dataPageOptions = {\n  rootMargin: \"0px\",\n  threshold: 0\n};\n\n  // MARKETS PAGE -- CRYPTOCURRENCIES // MARKETS PAGE -- CRYPTOCURRENCIES // MARKETS PAGE -- CRYPTOCURRENCIES\nconst marketsCryptoObserver = new IntersectionObserver(function(entries, marketsCryptoObserver) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n\n      // CODE FOR CHANGING THE CHART SCALE\n      let chartScale = 'linear'; //logarithmic or linear\n      const autoChartOption = document.querySelector('.autoChartOption');\n      autoChartOption.addEventListener('click', changeChartScale)\n      const logChartOption = document.querySelector('.logChartOption');\n      logChartOption.addEventListener('click', changeChartScale);\n      function changeChartScale(event) {\n      if (event.target.classList.contains('autoChartOption')) {\n          autoChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.6)';\n          logChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.2)';\n          chartScale = 'linear';\n          displayedChart.options.scales.y.type = chartScale;\n          displayedChart.update();\n      } else {\n              autoChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.2)';\n              logChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.6)';\n              chartScale = 'logarithmic';\n              displayedChart.options.scales.y.type = chartScale;\n              displayedChart.update();\n          }\n      };\n\n      // variables for the chart\n      let chartTime = []; //fetched data\n      let selectedTimePeriod = '365';\n      let assetPriceData = []; //fetched data\n      let selectedAssetID = 'bitcoin';\n      let selectedAssetName = 'Bitcoin';\n\n      // fetch initial data\n      try {\n        async function fetchData() {\n          let URL = `https://api.coingecko.com/api/v3/coins/${selectedAssetID}/market_chart?vs_currency=usd&days=${selectedTimePeriod}`;\n          let response = await fetch(URL);\n          let data = await response.json();\n          let priceAndTimeData = await data.prices;\n\n          // adding the fetched time to the chart\n          for (const time of priceAndTimeData) {\n            let epochTimeframe = await time[0];\n            let formattedDate = new Date(epochTimeframe);\n            let longTimeframe = formattedDate.toUTCString();\n            let timeframe = longTimeframe.substring(5, 16);\n            chartTime.push(timeframe);\n          };\n          displayedChart.data.labels = chartTime;\n\n          // adding the fetched price to the chart\n          let fetchedPriceData = [];\n          for (const price of priceAndTimeData) {\n            let prices = await price[1];\n            fetchedPriceData.push(prices);\n          };\n          let DataObject = {\n            label: `Price of ${selectedAssetName}`,\n            data: fetchedPriceData,\n            fill: false,\n            pointRadius: 0,\n            borderWidth: 1,\n            backgroundColor: '#FFFFFF',\n            borderColor: '#FFFFFF',\n            yAxisID: 'y'\n          };\n          assetPriceData.push(DataObject);\n          displayedChart.data.datasets = assetPriceData;\n\n          // update the chart with data and time\n          displayedChart.update();\n        }\n        fetchData();\n      }\n      catch(error) {\n        console.log('could not fetch initial data...');\n      }\n\n        // generate list of assets\n      const assetListURL = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=1&sparkline=false';\n      const assetListEl = document.querySelector('.assetList');\n      const addDataButton = document.querySelector('.addDataButton');\n      async function getAssetList() {\n        try {\n            // fetch the list of assets\n            let response = await fetch(assetListURL);\n            let assetListData = await response.json();\n\n            for (const asset of assetListData) {\n                // for the ID \n                let assetID = await asset.id;\n                const listOptions = document.createElement('option');\n                listOptions.classList.add(assetID);\n\n                // for the display name\n                let assetName = await asset.name;\n                listOptions.value = await assetName;\n\n                // add option onto the dropdown selection\n                listOptions.appendChild(document.createTextNode(assetName));\n                assetListEl.appendChild(listOptions);\n            }\n        }\n        catch(error) {\n            console.log(error);\n            console.log('cannot get list of assets from CoinGecko...');\n        }\n      }\n      getAssetList();\n\n      // change asset\n      function changeAsset() {\n        try {\n\n          // clear old chart history\n          assetPriceData = [];\n          chartTime = [];\n          selectedAssetID = '';\n          selectedAssetName = '';\n\n              // change the data on the chart\n          const changeAssetEl = document.querySelector('.assetList');\n          let selectedOption = changeAssetEl.options[changeAssetEl.selectedIndex];\n          selectedAssetName = selectedOption.value;\n          selectedAssetID = selectedOption.classList[0];\n\n          async function changeDisplayedAsset() {\n            let URL = `https://api.coingecko.com/api/v3/coins/${selectedAssetID}/market_chart?vs_currency=usd&days=${selectedTimePeriod}`;\n            let response = await fetch(URL);\n            let data = await response.json();\n            let priceAndTimeData = await data.prices;\n  \n            // adding the fetched time to the chart\n            for (const time of priceAndTimeData) {\n              let epochTimeframe = await time[0];\n              let formattedDate = new Date(epochTimeframe);\n              let longTimeframe = formattedDate.toUTCString();\n              let timeframe = longTimeframe.substring(4, 16);\n              chartTime.push(timeframe);\n            };\n            displayedChart.data.labels = chartTime;\n  \n            // adding the fetched price to the chart\n            let fetchedPriceData = [];\n            for (const price of priceAndTimeData) {\n              let prices = await price[1];\n              fetchedPriceData.push(prices);\n            };\n            let DataObject = {\n              label: `Price of ${selectedAssetName}`,\n              data: fetchedPriceData,\n              fill: false,\n              pointRadius: 0,\n              borderWidth: 1,\n              backgroundColor: '#FFFFFF',\n              borderColor: '#FFFFFF',\n              yAxisID: 'y'\n            };\n            assetPriceData.push(DataObject);\n            displayedChart.data.datasets = assetPriceData;\n  \n            // update the chart with data and time\n            displayedChart.update();\n          };\n          changeDisplayedAsset();\n\n        } \n        catch(error) {\n          console.log('Could not add new asset to chart....')\n        }\n      }\n      const changeAssetEl = document.querySelector('.assetList');\n      changeAssetEl.addEventListener('change', changeAsset);\n\n\n      // change timeframe\n      function changeTimeframe() {\n        try {\n          selectedTimePeriod = '';\n          assetPriceData = [];\n          chartTime = [];\n\n          const timeframeList = document.querySelector('.timeframeList');\n          selectedTimePeriod = timeframeList.value;\n  \n          async function fetchNewTimeframe() {\n            let URL =  `https://api.coingecko.com/api/v3/coins/${selectedAssetID}/market_chart?vs_currency=usd&days=${selectedTimePeriod}`;\n            let response = await fetch(URL);\n            let data = await response.json();\n            let priceAndTimeData = await data.prices;\n\n            // adding the newly fetched time to the chart\n            for (const time of priceAndTimeData) {\n              let epochTimeframe = await time[0];\n              let formattedDate = new Date(epochTimeframe);\n              let longTimeframe = formattedDate.toUTCString();\n              let timeframe = longTimeframe.substring(4, 16);\n              chartTime.push(timeframe);\n            }\n            displayedChart.data.labels = chartTime;\n\n            // adding the fetched price to the chart\n            let fetchedPriceData = [];\n            for (const price of priceAndTimeData) {\n              let prices = await price[1];\n              fetchedPriceData.push(prices);\n            };\n            let DataObject = {\n              label: `Price of ${selectedAssetName}`,\n              data: fetchedPriceData,\n              fill: false,\n              pointRadius: 0,\n              borderWidth: 1,\n              backgroundColor: '#FFFFFF',\n              borderColor: '#FFFFFF',\n              yAxisID: 'y'\n            };\n            assetPriceData.push(DataObject);\n            displayedChart.data.datasets = assetPriceData;\n  \n            // update the chart with data and time\n            displayedChart.update();\n  \n          }\n          fetchNewTimeframe();\n  \n  \n        }\n        catch(error) {\n          console.log('could not fetch new timeframe data...');\n        }\n      }\n      const selectedTimePeriodEl = document.querySelector('.timeframeList');\n      selectedTimePeriodEl.addEventListener('change', changeTimeframe);\n      \n      // CODE FOR THE CHART.JS LIBRARY\n      const ctx = document.querySelector('.marketCryptoPrice');\n      let displayedChart = new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: chartTime,\n          datasets: assetPriceData,\n        },\n        options: {\n          type: chartScale,\n          display: true,\n          position: 'left',\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              grid: {\n                color: '#232323',\n              },\n              ticks: {\n                // Include a dollar sign in the ticks\n                callback: function(value, index, values) {\n                    return '$' + value.toLocaleString(\"en-US\");\n                }\n            }\n            }\n          }\n        }\n      });\n      // end of the Intersection Observer\n    };\n  })\n}, dataPageOptions);\nconst marketCryptoPriceContainer = document.querySelector('.marketCryptocurrrencyChartContainer');\nmarketsCryptoObserver.observe(marketCryptoPriceContainer);\n\n\n  // MARKETS PAGE -- PUBLIC EXCHANGES, STAKERS & MINERS // MARKETS PAGE -- PUBLIC EXCHANGES, STAKERS & MINERS\nconst marketsStocksObserver = new IntersectionObserver(function(entries, marketsStocksObserver) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      const myAPIkey = 'GH9DTBAMAJL2HKD1';\n\n      // CODE FOR CHANGING THE CHART SCALE\n      let chartScale = 'logarithmic'; //logarithmic or linear\n      const autoChartOption = document.querySelector('.stockAutoChartOption');\n      autoChartOption.addEventListener('click', changeChartScale)\n      const logChartOption = document.querySelector('.stockLogChartOption');\n      logChartOption.addEventListener('click', changeChartScale);\n      function changeChartScale(event) {\n      if (event.target.classList.contains('autoChartOption')) {\n        autoChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.6)';\n        logChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.2)';\n        chartScale = 'linear';\n        stockPriceChart.options.scales.y.type = chartScale;\n        stockPriceChart.update();\n      } \n      else {\n        autoChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.2)';\n        logChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.6)';\n        chartScale = 'logarithmic';\n        stockPriceChart.options.scales.y.type = chartScale;\n        stockPriceChart.update();\n      }\n      };\n\n      // variables for price, time, and ticker\n      let timeframeData = [];\n      let stockPriceData = [];\n      let reversedFetchedPrice = [];\n      let fetchedPriceData = [];\n      let ticker = 'MSTR';\n      let nameOfPublicCompany = 'MicroStrategy Inc.';\n\n      // INVESTMENT RETURN DATA AND CHART\n      let selectedAsset = 'bitcoin';\n      let investmentAmounts = [];\n      let backgroundColor = 'rgb(255,255,255, 0.15)';\n\n      let timeframe = 'TIME_SERIES_DAILY_ADJUSTED'; // TIME_SERIES_DAILY_ADJUSTED, TIME_SERIES_WEEKLY_ADJUSTED\n      let timeSeries = 'Time Series (Daily)'; // Time Series (Daily), Weekly Adjusted Time Series\n\n      // function to initially fetch the data\n      async function fetchData() {\n        try {\n          const options = {\n              method: 'GET',\n              headers: {\n                  'X-RapidAPI-Key': '5abcde3910mshe635fb57c055c0fp10d768jsna1801b9b4a77',\n                  'X-RapidAPI-Host': 'real-time-finance-data.p.rapidapi.com'\n              }\n          };\n\n          // Creating the URL and fetching the data\n          let URL = `https://www.alphavantage.co/query?function=${timeframe}&symbol=${ticker}&apikey=${myAPIkey}`;\n          let response = await fetch(URL);\n          let data = await response.json();\n\n          // to fetch timeframe\n          timeframeData = [];\n          let unorderedTimeframeData = [];\n          let timeSeriesData = await data[`${timeSeries}`];\n          for (const time in timeSeriesData) {  \n            unorderedTimeframeData.push(time);\n          }\n          timeframeData = unorderedTimeframeData.reverse();\n          stockPriceChart.data.labels = timeframeData;\n\n          // to fetch price data\n          stockPriceData = [];\n          reversedFetchedPrice = [];\n          fetchedPriceData = [];\n          let priceSeriesData = await data[`${timeSeries}`];\n          let allPriceDataObject = Object.values(priceSeriesData);\n          for (let i = 0; i < allPriceDataObject.length; i++) {\n            let allPrices = allPriceDataObject[`${i}`];\n            let closePrices = Object.values(allPrices);\n            let closePrice = Number(closePrices[4]);\n            reversedFetchedPrice.push(closePrice);\n          };\n          fetchedPriceData = reversedFetchedPrice.reverse();\n          \n          let dataObject = {\n            label: `Price of ${ticker}`,\n            data: fetchedPriceData,\n            fill: false,\n            pointRadius: 0,\n            borderWidth: 1,\n            backgroundColor: '#FFFFFF',\n            borderColor: '#FFFFFF',\n            yAxisID: 'y'\n          };\n          stockPriceData.push(dataObject);\n          stockPriceChart.data.datasets = stockPriceData;\n\n          // update chart\n          stockPriceChart.update();\n        } \n        catch(error) {\n          console.log(error);\n          console.log('could not fetch data');\n        };\n      };\n      fetchData();\n\n      async function fetchStockList() {\n\n        try {\n          let URL = `https://api.coingecko.com/api/v3/companies/public_treasury/${selectedAsset}`;\n\n          let response = await fetch(URL);\n          let data = await response.json();\n\n          // fetch the names of the stocks\n          let stockName = await data['companies'];\n          const stockList = document.querySelector('.stockList');\n          let arrayNumber = 0;\n          for (const names of stockName) {\n            // create the element for the drop down list\n            const optionEl = document.createElement('option');\n            optionEl.classList.add(arrayNumber);\n            arrayNumber++;\n            let nameOfStock = names['name'];\n            optionEl.appendChild(document.createTextNode(nameOfStock));\n            let fullTicker = names['symbol'];\n            let justTicker = fullTicker.split(':').pop();\n            let singleticker = justTicker.trim();\n\n            // change necessary ticker names\n            if (singleticker == 'Hut-8') {\n              singleticker = 'HUT';\n            } else if (singleticker == '3659') {\n              singleticker = 'NEXOF';\n            } else if (singleticker == 'VYGR') {\n              singleticker = 'VYGVQ';\n            } else if (singleticker == 'BIGG') {\n              singleticker = 'BBKCF';\n            } else if (singleticker == 'DCC') {\n              singleticker = 'DGGXF';\n            } else if (singleticker == 'FORT') {\n              singleticker = 'FRTTF';\n            } else if (singleticker == 'MODE') {\n              singleticker = 'MODGF';\n            } else if (singleticker == 'DASH') {\n              singleticker = 'NPPTF';\n            }\n            optionEl.value = singleticker;\n\n            // if function to remove unnecessary stocks from the list\n            if (singleticker !== '1357' && singleticker !== 'AKER' && singleticker !== 'HODL' && singleticker !== 'BROOK') {\n              stockList.appendChild(optionEl);\n            };\n          }\n\n          // fetch the data on the text section\n          let publicStockHoldingFullName = document.querySelector('.publicStockHoldingFullName');\n          let selectedStock = stockList.options[stockList.selectedIndex].text;\n          publicStockHoldingFullName.innerHTML = selectedStock; \n          let publicStockHoldingTicker = document.querySelector('.publicStockHoldingTicker');\n          publicStockHoldingTicker.innerHTML = stockList.value;\n          let nameofSelectedCryptoPublicCompany = document.querySelector('.nameofSelectedCryptoPublicCompany');\n          let UpperCaseSelectedAsset = selectedAsset.charAt(0).toUpperCase() + selectedAsset.slice(1);\n          nameofSelectedCryptoPublicCompany.innerHTML = UpperCaseSelectedAsset;\n\n          // fetch the total holding data\n          let firstCompanydata = await data['companies'][0];\n          let companyTotalCryptoHoldings = document.querySelector('.companyTotalCryptoHoldings');\n          let unformattedTotalCryptoHoldings = await firstCompanydata['total_holdings'];\n          let totalCryptoHoldings = unformattedTotalCryptoHoldings.toLocaleString();\n          companyTotalCryptoHoldings.innerHTML = totalCryptoHoldings;\n          let companyTotalUSDholdings = document.querySelector('.companyTotalUSDholdings');\n          let unformattedUsdHoldings = await firstCompanydata['total_current_value_usd'];\n          let totalUsdHoldings = unformattedUsdHoldings.toLocaleString();\n          companyTotalUSDholdings.innerHTML = totalUsdHoldings;\n\n          // fetch the dominance and total supply\n          let percentOfTotalSupply = document.querySelector('.publicCompanyMarketCapDominance');\n          percentOfTotalSupply.innerHTML = firstCompanydata['percentage_of_total_supply'];\n\n          // fetch the investment returns\n          let InitialInvestmentValue = await stockName[0]['total_entry_value_usd'];\n          let = currentInvestmentValue = await stockName[0]['total_current_value_usd'];\n          publicCompanyInvestmentReturns.data.datasets.forEach(data => {\n            data.data.push(InitialInvestmentValue);\n            data.data.push(currentInvestmentValue);\n          });\n\n          function changeColorOfInvestmentChart() {\n            if (InitialInvestmentValue < currentInvestmentValue) {\n              backgroundColor = 'rgb(0,255,0, 0.15)';\n            } else {\n              backgroundColor = 'rgb(255,0,0, 0.15)';\n            }\n            publicCompanyInvestmentReturns.data.datasets.forEach(data => {\n              data.backgroundColor = backgroundColor;\n            });\n          };\n          changeColorOfInvestmentChart();\n\n          publicCompanyInvestmentReturns.update();\n        }\n        catch(error) {\n          console.log(error);\n          console.log('Could not fetch the list of stocks...')\n        }\n      };\n      fetchStockList();\n\n      // function to initially fetch the stock names and company data\n      function changeTimeframe() {\n\n        if (publicStockChartTimeframe.value == 'TIME_SERIES_DAILY_ADJUSTED') {\n          timeSeries = 'Time Series (Daily)'; // Time Series (Daily), Weekly Adjusted Time Series\n          timeframe = publicStockChartTimeframe.value;\n\n        } else {\n          timeSeries = 'Weekly Adjusted Time Series'; // Time Series (Daily), Weekly Adjusted Time Series\n          timeframe = publicStockChartTimeframe.value;\n        }\n        fetchData();\n        changeHeldAsset();\n        fetchStockList();\n      };\n      const publicStockChartTimeframe = document.querySelector('.publicStockTimeframeSelection');\n      publicStockChartTimeframe.addEventListener('change', changeTimeframe);\n\n      // change the displayed stock data and price action\n      function changeDisplayedStock() {\n        // for the stock chart\n        const listOfCryptoCompanies = document.querySelector('.listOfCryptoCompanies');\n        let selectedStockTicker = listOfCryptoCompanies.value;\n        ticker = selectedStockTicker;\n        fetchData();\n\n        // change company full name and ticker symbol\n        let selectedStock = listOfCryptoCompanies.options[listOfCryptoCompanies.selectedIndex].text;\n        let publicStockHoldingFullName = document.querySelector('.publicStockHoldingFullName');\n        publicStockHoldingFullName.innerHTML = selectedStock;\n        let publicStockHoldingTicker = document.querySelector('.publicStockHoldingTicker');\n        publicStockHoldingTicker.innerHTML = listOfCryptoCompanies.value;\n        let nameofSelectedCryptoPublicCompany = document.querySelector('.nameofSelectedCryptoPublicCompany');\n        nameofSelectedCryptoPublicCompany.innerHTML = selectedAsset.charAt(0).toUpperCase() + selectedAsset.slice(1);\n\n        // change the company holdings and % of total supply\n        async function reFetchCompanyData() {\n          try {\n\n            let URL = `https://api.coingecko.com/api/v3/companies/public_treasury/${selectedAsset}`;\n            let response = await fetch(URL);\n            let data = await response.json();\n            // for the stock number within the list\n            let selectedStockEl = listOfCryptoCompanies.options[listOfCryptoCompanies.selectedIndex];\n            let selectedStockOrderValue = Array.from(selectedStockEl.classList);\n            let stockNumberInArray = selectedStockOrderValue.toString();\n            // the crypto holdings\n            let companyCryptoHoldings = await data['companies'][stockNumberInArray]['total_holdings'];\n            let companyTotalCryptoHoldings = document.querySelector('.companyTotalCryptoHoldings');\n            companyTotalCryptoHoldings.innerHTML = companyCryptoHoldings.toLocaleString();\n            // the holdings in USD\n            let companyUsdHoldings = await data['companies'][stockNumberInArray]['total_current_value_usd'];\n            let companyTotalUsdHoldings = document.querySelector('.companyTotalUSDholdings');\n            companyTotalUsdHoldings.innerHTML = companyUsdHoldings.toLocaleString();\n\n            // the % of total supply\n            let percentOfTotalSupply = await data['companies'][stockNumberInArray]['percentage_of_total_supply'];\n            let percentOfTotalSupplyEl = document.querySelector('.publicCompanyMarketCapDominance');\n            percentOfTotalSupplyEl.innerHTML = percentOfTotalSupply;\n\n            // the investment value\n            investmentAmounts = [];\n            let initialInvestmentValue = await data['companies'][stockNumberInArray]['total_entry_value_usd'];\n            let currentInvestmentValue = await data['companies'][stockNumberInArray]['total_current_value_usd'];\n            investmentAmounts.push(initialInvestmentValue);\n            investmentAmounts.push(currentInvestmentValue);\n            publicCompanyInvestmentReturns.data.datasets[0].data = investmentAmounts;\n            if (initialInvestmentValue < currentInvestmentValue) {\n              backgroundColor = 'rgb(0,255,0, 0.15)';\n            } else {\n              backgroundColor = 'rgb(255,0,0, 0.15)';\n            }\n            publicCompanyInvestmentReturns.data.datasets[0].backgroundColor = backgroundColor;\n            publicCompanyInvestmentReturns.update();\n\n\n\n            console.log(investmentAmounts);\n  \n          }\n          catch(error) {\n            console.log(error);\n            console.log('Could not change displayed stock info...')\n          }\n        };\n        reFetchCompanyData();\n\n      };\n      const listOfCryptoCompanies = document.querySelector('.listOfCryptoCompanies');\n      listOfCryptoCompanies.addEventListener('change', changeDisplayedStock);\n\n      // if the user changes the held asset\n      const heldAssetByPublicCompanies = document.querySelectorAll('.heldAssetByPublicCompanies');\n      function changeHeldAsset(event) {\n        const chartBTCButton = document.querySelector('.chartBTCButton');\n        const chartETHButton = document.querySelector('.chartETHButton');\n        if (event.target.value == 'bitcoin') {\n          chartBTCButton.style.backgroundColor = 'rgb(128, 128, 128, 0.6)';\n          chartETHButton.style.backgroundColor = 'rgb(128, 128, 128, 0.2)';\n          selectedAsset = event.target.value;\n          changeDisplayedStock();\n        } else {\n          chartBTCButton.style.backgroundColor = 'rgb(128, 128, 128, 0.2)';\n          chartETHButton.style.backgroundColor = 'rgb(128, 128, 128, 0.6)';\n          selectedAsset = event.target.value;\n          changeDisplayedStock();\n        }\n\n      };\n      heldAssetByPublicCompanies.forEach(asset => {\n        asset.addEventListener('click', changeHeldAsset);\n      });\n\n      // CODE FOR THE MAIN PRICE CHART\n      const stockPriceCanvas = document.querySelector('.marketStockPrice');\n      let stockPriceChart = new Chart(stockPriceCanvas, {\n        type: 'line',\n        data: {\n          labels: timeframeData,\n          datasets: stockPriceData,\n        },\n        options: {\n          type: chartScale,\n          display: true,\n          position: 'left',\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              grid: {\n                color: '#232323',\n              },\n              ticks: {\n                callback: function(value, index, values) {\n                  return '$' + value.toLocaleString(\"en-US\");\n                }\n              }\n            }\n          }\n        }\n      });\n\n      // CODE FOR THE INVESTMENT RETURN CHART\n      const investmentReturnChart = document.querySelector('.publicStockAssetHoldingChart');\n      let publicCompanyInvestmentReturns = new Chart(investmentReturnChart, {\n        type: 'line',\n        data: {\n          labels: ['Initial Investment', 'Current Value'],\n          datasets: [{\n            label: 'Gain/Loss',\n            data: investmentAmounts,\n            fill: true,\n            pointRadius: 0,\n            borderWidth: 1,\n            backgroundColor: backgroundColor,\n            borderColor: '#FFFFFF',\n          }]\n        },\n        options: {\n          type: 'logarithmic',\n          display: true,\n          position: 'left',\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              grid: {\n                color: '#232323',\n              },\n              ticks: {\n                beginAtZero: false,\n                callback: function(value, index, values) {\n                  return '$' + value / 1e6 + ' ' + 'M';;\n                }\n              }\n            }\n          }\n        }\n      });\n      window.addEventListener(\"resize\", (event) => {\n        const publicStockAssetHoldingChart = document.querySelector('.publicStockAssetHoldingChart');\n        publicStockAssetHoldingChart.style.width = '100%';\n      });\n\n\n\n\n    // End of the if statement for the intersection observer\n    }\n  })\n}, dataPageOptions);\n\n\nconst marketPublicstockChartContainer = document.querySelector('.marketPublicstockChartContainer');\nmarketsStocksObserver.observe(marketPublicstockChartContainer);\n\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}