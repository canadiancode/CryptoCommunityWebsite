{"version":3,"sources":["toolsScript.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["openCloseCategoriesDiv","document","querySelector","categoryHeadingContainer","querySelectorAll","openCloseCategoriesDivText","chartButtonContainer","openOrCloseCategoryList","chartSelectionPanelContainer","openCategoryListIcon","classList","contains","remove","style","transform","add","addEventListener","categoryArrowOpen","categoryArrowClose","openOrCloseCategory","i","display","length","loadFirstDataDashboard","dataSubPageContainer","showThisContainer","changeDisplayedDashboard","event","target","priceContainer","compareMarketCapContainer","volumePageContainer","totalValueLockedContainer","console","log","dataDashboardSelectionBtn","forEach","button","dataPageContainer","dataPageOptions","rootMargin","threshold","marketsCryptoObserver","IntersectionObserver","entries","entry","isIntersecting","changeChartScale","autoChartOption","backgroundColor","logChartOption","chartScale","displayedChart","options","scales","y","type","update","getAssetList","fetch","assetListURL","response","json","assetListData","asset","id","assetID","listOptions","createElement","name","assetName","value","appendChild","createTextNode","assetListEl","changeAsset","changeDisplayedAsset","URL","selectedAssetID","selectedTimePeriod","data","prices","priceAndTimeData","time","epochTimeframe","formattedDate","Date","longTimeframe","toUTCString","timeframe","substring","chartTime","push","labels","fetchedPriceData","price","DataObject","label","selectedAssetName","fill","pointRadius","borderWidth","borderColor","yAxisID","assetPriceData","datasets","changeAssetEl","selectedOption","selectedIndex","error","changeTimeframe","fetchNewTimeframe","timeframeList","fetchData","addDataButton","selectedTimePeriodEl","ctx","Chart","position","responsive","maintainAspectRatio","grid","color","ticks","callback","index","values","toLocaleString","marketCryptoPriceContainer","observe","marketsStocksObserver","stockPriceChart","method","headers","ticker","myAPIkey","timeframeData","unorderedTimeframeData","timeSeries","timeSeriesData","reverse","stockPriceData","reversedFetchedPrice","priceSeriesData","allPriceDataObject","Object","allPrices","closePrices","closePrice","Number","dataObject","fetchStockList","changeColorOfInvestmentChart","InitialInvestmentValue","currentInvestmentValue","publicCompanyInvestmentReturns","selectedAsset","stockName","stockList","arrayNumber","innerHTML","names","optionEl","nameOfStock","fullTicker","justTicker","split","pop","singleticker","trim","publicStockHoldingFullName","selectedStock","text","publicStockHoldingTicker","nameofSelectedCryptoPublicCompany","UpperCaseSelectedAsset","charAt","toUpperCase","slice","firstCompanydata","companyTotalCryptoHoldings","unformattedTotalCryptoHoldings","totalCryptoHoldings","companyTotalUSDholdings","unformattedUsdHoldings","totalUsdHoldings","percentOfTotalSupply","let","setTimeout","publicStockChartTimeframe","changeHeldAsset","changeDisplayedStock","listOfCryptoCompanies","selectedStockTicker","reFetchCompanyData","selectedStockEl","selectedStockOrderValue","Array","from","stockNumberInArray","toString","companyCryptoHoldings","companyUsdHoldings","companyTotalUsdHoldings","percentOfTotalSupplyEl","investmentAmounts","initialInvestmentValue","chartBTCButton","chartETHButton","heldAssetByPublicCompanies","stockPriceCanvas","window","width","height","investmentReturnChart","beginAtZero","publicStockAssetHoldingChart","marketPublicstockChartContainer","marketsCompareMarketCapObserver","URLOne","firstSelectedAssetID","responseOne","dataOne","market_caps","marketcapAndTimeDataOne","URLTwo","secondSelectedAssetID","responseTwo","dataTwo","marketcapAndTimeDataTwo","marketCap","marketCaps","firstSelectedAssetName","missingZeroValues","fetchedPriceDataTwo","DataObjectTwo","secondSelectedAssetName","assetCountInArrayOne","assetCountInArrayTwo","assetListElOne","marketCapValuationOne","fullyDilutedValOne","percentFromATHOne","firstListOfCryptos","firstNumberInCryptoList","firstNumberInList","totalMarketCapOne","shortenedMarketCapOne","formattedTotalMarketCapOne","fullyDilutedvalOne","shortendedFullyDilutedValOne","formattedFullyDilutedValOne","percentFromAllTimeHighOne","Math","round","assetListElTwo","marketCapValuationTwo","fullyDilutedValTwo","percentFromATHTwo","secondListOfCryptos","secondNumberInCryptoList","secondNumberInList","totalMarketCapTwo","shortenedMarketCapTwo","formattedTotalMarketCapTwo","fullyDilutedvalTwo","shortendedFullyDilutedValTwo","formattedFullyDilutedValTwo","percentFromAllTimeHighTwo","reFetchAssetMetrics","changeAssetOne","changeAssetOneEl","changeAssetTwo","changeAssetTwoEl","exchangeVolumeObserver","totalBitcoinVolume","BitcoinPrice","dominanceOfExchanges","nameOfAllExchanges","fetchVolumeData","TotalVolumeUrl","totalVolumeResponse","totalVolumeData","bitcoinTotalVolumeVariable","currentBitcoinPrice","singleExchanageUrl","singleExchangeResponse","singleExchangeData","singleExchangeName","dominance","totalBtcTraded","totalUsdTraded","dominanceDecimal","dominancePercentage","splice","displayedExchangeDominance","otherExchangeDominance","percentage","CexDominancedata","hoverOffset","cexVolumePieChart","cexVolumePieChartEl","cutout","plugins","legend","totalOpenInterest","nameOfFuturesExchanges","openInterests","fetchFuturesExchanges","futuresExchange","singleExchangeOi","currentOpenInterest","openInterest","openInterestData","openInterestDominance","openInterestDominancePercentage","totalOiOtherExchanges","otherExchanges","OpenInterestDominancedata","openInterestPieChart","openInterestPieChartEl","fundingRateAsset","futuresExchanges","fundingRates","exchangeOpenInterests","totalFundingRateOpenInterest","weightedAverageFundingRate","fetchFundingRate","market","rawExchangeName","exchangeRemoveFutureText","replace","exchangeOneBracket","exchangeTwoBracket","exchange","averageFundingRate","fundingRate","rate","IO","weightedFR","weightForEachExchange","FundingRate","weightedFundingRate","fundingRateObject","averageFundingRateEl","toFixed","weightedAverageFundingRateEl","fundingRateChart","changeFundingRateAsset","BtcFundingRateButton","EthFundingRateButton","displayedFundingRateAsset","changeFundingRateButton","fundingRateChartEl","y1","exchangeDataContainer","totalvalueLockedObserver","fetchChainList","chainListURL","chainListData","chainListResponse","compareTVLListOne","compareTVLListTwo","chain","chainName","chainNameList","totalValueLocked","chainTotalValueLockedList","TvlListOneEl","TvlListTwoEl","firstChainInListName","nameOfFirstChainInList","firstDisplayedTVL","firstChainInListTVL","TotalValueLockedOne","secondChainInList","nameOfSecondChainInList","secondDisplayedTVL","secondCurrentTVL","TotalValueLockedTwo","changeDisplayedTVL","selectedChainOneIndex","selectedChainOne","formatTVLValueOne","selectedChainTwoIndex","selectedChainTwo","formatTVLValueTwo","fetchHistoricalData","compareTvlChart","totalValueLockedAggInput","checked","mainEndpointURL","TvlExtractionKey","firstDatasetURL","firstDatasetData","firstDatasetResponse","secondDatasetURL","secondDatasetData","secondDatasetResponse","totalValueLockedOne","totalValueLockedTwo","TVL_data","timeframe_data","startingDate","formattedDateValue","setUTCSeconds","displayedTimeframe","chainOneTvl","TVL","TvlObjectOne","addedTimeValueForTwo","chainTwoTvl","TvlObjectTwo","removeItems","addedTimeValueForOne","compareTVLTimeframeList","takeawayValue","selectionOfChains","totalValueLockedAggInputContainer","compareTotalValueLockedCanvas","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","JSON","parse","handled","assets","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","message","stack","overlay","createErrorOverlay","body","getElementById","stackTrace","innerText","getParents","modules","parents","k","d","dep","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"toolsScript.96a0c043.js","sourceRoot":"../src","sourcesContent":["  // CODE FOR THE CATEGORY LIST FUNCTION\n// display and hide the category list\nconst openCloseCategoriesDiv = document.querySelector('.openCloseCategoriesDiv');\nconst categoryHeadingContainer = document.querySelectorAll('.categoryHeadingContainer');\nconst openCloseCategoriesDivText = document.querySelector('.containerSignDiv');\nconst chartButtonContainer = document.querySelectorAll('.chartButtonContainer');\nfunction openOrCloseCategoryList() {\n\n  // variables\n  const chartSelectionPanelContainer = document.querySelector('.chartSelectionPanelContainer');\n  const openCategoryListIcon = document.querySelector('.fa-arrow-right-to-bracket');\n\n  if (openCloseCategoriesDiv.classList.contains('openCategoryList')) {\n    openCloseCategoriesDiv.classList.remove('openCategoryList');\n    chartSelectionPanelContainer.style.transform = 'translateX(-100%)';\n    openCategoryListIcon.style.transform = 'rotate(0deg)';\n    openCloseCategoriesDivText.style.transform = 'rotate(-90deg) translateY(0%)';\n  } else {\n    openCloseCategoriesDiv.classList.add('openCategoryList');\n    chartSelectionPanelContainer.style.transform = 'translateX(0%)';\n    openCategoryListIcon.style.transform = 'rotate(180deg)';\n    openCloseCategoriesDivText.style.transform = 'rotate(-90deg) translateY(-100%)';\n  }\n}\nopenCloseCategoriesDiv.addEventListener('click', openOrCloseCategoryList);\nopenCloseCategoriesDivText.addEventListener('click', openOrCloseCategoryList);\nfor (let i = 0; i < categoryHeadingContainer.length; i++) {\n\n  // variables\n  const categoryArrowOpen = document.querySelectorAll('.fa-arrow-down-short-wide');\n  const categoryArrowClose = document.querySelectorAll('.fa-arrow-up-short-wide');\n\n  // function to open or close the category\n  function openOrCloseCategory() {\n    if (chartButtonContainer[i].classList.contains('opened')) {\n      chartButtonContainer[i].classList.remove('opened');\n      categoryArrowOpen[i].style.display = 'none';\n      categoryArrowClose[i].style.display = 'block';\n\n    } else {\n      chartButtonContainer[i].classList.add('opened');\n      categoryArrowOpen[i].style.display = 'block';\n      categoryArrowClose[i].style.display = 'none';\n    }\n  };\n  categoryHeadingContainer[i].addEventListener('click', openOrCloseCategory);\n};\n\n// CHANGE PAGE TO SELECED DATA DASHBOARD\nfunction loadFirstDataDashboard() {\n  const dataSubPageContainer = document.querySelectorAll('.dataSubPageContainer');\n  for (let i = 0; i < dataSubPageContainer.length; i++) {\n    dataSubPageContainer[i].style.display = 'none';\n  };\n  // change the selection below for what to show when building\n  const showThisContainer = document.querySelector('.totalValueLockedContainer');\n  showThisContainer.style.display = 'flex';\n\n}\nloadFirstDataDashboard();\nfunction changeDisplayedDashboard(event) {\n  const dataSubPageContainer = document.querySelectorAll('.dataSubPageContainer');\n  for (let i = 0; i < dataSubPageContainer.length; i++) {\n    dataSubPageContainer[i].style.display = 'none';\n  };\n\n  if (event.target.classList.contains('priceHolingsBtn')) {\n    const priceContainer = document.querySelector('.priceContainer');\n    priceContainer.style.display = 'flex';\n  }\n  else if (event.target.classList.contains('compareMarketCapBtn')) {\n    const compareMarketCapContainer = document.querySelector('.compareMarketCapContainer');\n    compareMarketCapContainer.style.display = 'flex';\n  }\n  else if (event.target.classList.contains('marketVolumeBtn')) {\n    const volumePageContainer = document.querySelector('.volumePageContainer');\n    volumePageContainer.style.display = 'flex';\n  } else if (event.target.classList.contains('dataDashboardSelectionBtn')) {\n    const totalValueLockedContainer = document.querySelector('.totalValueLockedContainer');\n    totalValueLockedContainer.style.display = 'flex';\n  } \n  else {\n    console.log('no displayed charts available');\n  }\n};\nconst dataDashboardSelectionBtn = document.querySelectorAll('.dataDashboardSelectionBtn');\ndataDashboardSelectionBtn.forEach(button => {\n  button.addEventListener('click', changeDisplayedDashboard);\n  button.addEventListener('click', openOrCloseCategoryList);\n});\n\n\n  // START OF THE DATA PAGES -- START OF THE DATA PAGES -- START OF THE DATA PAGES\n  // START OF THE DATA PAGES -- START OF THE DATA PAGES -- START OF THE DATA PAGES\n\n  // the option for the intersection observer\nconst dataPageContainer = document.querySelectorAll('.dataSubPageContainer');\nconst dataPageOptions = {\n  rootMargin: \"0px\",\n  threshold: 0\n};\n\n  // MARKETS PAGE -- CRYPTOCURRENCY PRICES // -- CRYPTOCURRENCY PRICES // CRYPTOCURRENCY PRICES\nconst marketsCryptoObserver = new IntersectionObserver(function(entries, marketsCryptoObserver) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n\n      // CODE FOR CHANGING THE CHART SCALE\n      let chartScale = 'linear'; //logarithmic or linear\n      const autoChartOption = document.querySelector('.autoChartOption');\n      autoChartOption.addEventListener('click', changeChartScale)\n      const logChartOption = document.querySelector('.logChartOption');\n      logChartOption.addEventListener('click', changeChartScale);\n      function changeChartScale(event) {\n      if (event.target.classList.contains('autoChartOption')) {\n          autoChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.6)';\n          logChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.2)';\n          chartScale = 'linear';\n          displayedChart.options.scales.y.type = chartScale;\n          displayedChart.update();\n      } else {\n              autoChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.2)';\n              logChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.6)';\n              chartScale = 'logarithmic';\n              displayedChart.options.scales.y.type = chartScale;\n              displayedChart.update();\n          }\n      };\n\n      // variables for the chart\n      let chartTime = []; //fetched data\n      let selectedTimePeriod = '365';\n      let assetPriceData = []; //fetched data\n      let selectedAssetID = 'bitcoin';\n      let selectedAssetName = 'Bitcoin';\n\n      // fetch initial data\n      try {\n        async function fetchData() {\n          let URL = `https://api.coingecko.com/api/v3/coins/${selectedAssetID}/market_chart?vs_currency=usd&days=${selectedTimePeriod}`;\n          let response = await fetch(URL);\n          let data = await response.json();\n          let priceAndTimeData = await data.prices;\n\n          // adding the fetched time to the chart\n          for (const time of priceAndTimeData) {\n            let epochTimeframe = await time[0];\n            let formattedDate = new Date(epochTimeframe);\n            let longTimeframe = formattedDate.toUTCString();\n            let timeframe = longTimeframe.substring(5, 16);\n            chartTime.push(timeframe);\n          };\n          displayedChart.data.labels = chartTime;\n\n          // adding the fetched price to the chart\n          let fetchedPriceData = [];\n          for (const price of priceAndTimeData) {\n            let prices = await price[1];\n            fetchedPriceData.push(prices);\n          };\n          let DataObject = {\n            label: `Price of ${selectedAssetName}`,\n            data: fetchedPriceData,\n            fill: false,\n            pointRadius: 0,\n            borderWidth: 1,\n            backgroundColor: '#FFFFFF',\n            borderColor: '#FFFFFF',\n            yAxisID: 'y'\n          };\n          assetPriceData.push(DataObject);\n          displayedChart.data.datasets = assetPriceData;\n\n          // update the chart with data and time\n          displayedChart.update();\n        }\n        fetchData();\n      }\n      catch(error) {\n        console.log('could not fetch initial data...');\n      }\n\n        // generate list of assets\n      const assetListURL = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=1&sparkline=false';\n      const assetListEl = document.querySelector('.assetList');\n      const addDataButton = document.querySelector('.addDataButton');\n      async function getAssetList() {\n        try {\n            // fetch the list of assets\n            let response = await fetch(assetListURL);\n            let assetListData = await response.json();\n\n            for (const asset of assetListData) {\n                // for the ID \n                let assetID = await asset.id;\n                const listOptions = document.createElement('option');\n                listOptions.classList.add(assetID);\n\n                // for the display name\n                let assetName = await asset.name;\n                listOptions.value = await assetName;\n\n                // add option onto the dropdown selection\n                listOptions.appendChild(document.createTextNode(assetName));\n                assetListEl.appendChild(listOptions);\n            }\n        }\n        catch(error) {\n            console.log(error);\n            console.log('cannot get list of assets from CoinGecko...');\n        }\n      }\n      getAssetList();\n\n      // change asset\n      function changeAsset() {\n        try {\n\n          // clear old chart history\n          assetPriceData = [];\n          chartTime = [];\n          selectedAssetID = '';\n          selectedAssetName = '';\n\n              // change the data on the chart\n          const changeAssetEl = document.querySelector('.assetList');\n          let selectedOption = changeAssetEl.options[changeAssetEl.selectedIndex];\n          selectedAssetName = selectedOption.value;\n          selectedAssetID = selectedOption.classList[0];\n\n          async function changeDisplayedAsset() {\n            let URL = `https://api.coingecko.com/api/v3/coins/${selectedAssetID}/market_chart?vs_currency=usd&days=${selectedTimePeriod}`;\n            let response = await fetch(URL);\n            let data = await response.json();\n            let priceAndTimeData = await data.prices;\n  \n            // adding the fetched time to the chart\n            for (const time of priceAndTimeData) {\n              let epochTimeframe = await time[0];\n              let formattedDate = new Date(epochTimeframe);\n              let longTimeframe = formattedDate.toUTCString();\n              let timeframe = longTimeframe.substring(4, 16);\n              chartTime.push(timeframe);\n            };\n            displayedChart.data.labels = chartTime;\n  \n            // adding the fetched price to the chart\n            let fetchedPriceData = [];\n            for (const price of priceAndTimeData) {\n              let prices = await price[1];\n              fetchedPriceData.push(prices);\n            };\n            let DataObject = {\n              label: `Price of ${selectedAssetName}`,\n              data: fetchedPriceData,\n              fill: false,\n              pointRadius: 0,\n              borderWidth: 1,\n              backgroundColor: '#FFFFFF',\n              borderColor: '#FFFFFF',\n              yAxisID: 'y'\n            };\n            assetPriceData.push(DataObject);\n            displayedChart.data.datasets = assetPriceData;\n  \n            // update the chart with data and time\n            displayedChart.update();\n          };\n          changeDisplayedAsset();\n\n        } \n        catch(error) {\n          console.log('Could not add new asset to chart....')\n        }\n      }\n      const changeAssetEl = document.querySelector('.assetList');\n      changeAssetEl.addEventListener('change', changeAsset);\n\n\n      // change timeframe\n      function changeTimeframe() {\n        try {\n          selectedTimePeriod = '';\n          assetPriceData = [];\n          chartTime = [];\n\n          const timeframeList = document.querySelector('.timeframeList');\n          selectedTimePeriod = timeframeList.value;\n  \n          async function fetchNewTimeframe() {\n            let URL =  `https://api.coingecko.com/api/v3/coins/${selectedAssetID}/market_chart?vs_currency=usd&days=${selectedTimePeriod}`;\n            let response = await fetch(URL);\n            let data = await response.json();\n            let priceAndTimeData = await data.prices;\n\n            // adding the newly fetched time to the chart\n            for (const time of priceAndTimeData) {\n              let epochTimeframe = await time[0];\n              let formattedDate = new Date(epochTimeframe);\n              let longTimeframe = formattedDate.toUTCString();\n              let timeframe = longTimeframe.substring(4, 16);\n              chartTime.push(timeframe);\n            }\n            displayedChart.data.labels = chartTime;\n\n            // adding the fetched price to the chart\n            let fetchedPriceData = [];\n            for (const price of priceAndTimeData) {\n              let prices = await price[1];\n              fetchedPriceData.push(prices);\n            };\n            let DataObject = {\n              label: `Price of ${selectedAssetName}`,\n              data: fetchedPriceData,\n              fill: false,\n              pointRadius: 0,\n              borderWidth: 1,\n              backgroundColor: '#FFFFFF',\n              borderColor: '#FFFFFF',\n              yAxisID: 'y'\n            };\n            assetPriceData.push(DataObject);\n            displayedChart.data.datasets = assetPriceData;\n  \n            // update the chart with data and time\n            displayedChart.update();\n  \n          }\n          fetchNewTimeframe();\n  \n  \n        }\n        catch(error) {\n          console.log('could not fetch new timeframe data...');\n        }\n      }\n      const selectedTimePeriodEl = document.querySelector('.timeframeList');\n      selectedTimePeriodEl.addEventListener('change', changeTimeframe);\n      \n      // CODE FOR THE CHART.JS LIBRARY\n      const ctx = document.querySelector('.marketCryptoPrice');\n      let displayedChart = new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: chartTime,\n          datasets: assetPriceData,\n        },\n        options: {\n          type: chartScale,\n          display: true,\n          position: 'left',\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              grid: {\n                color: '#232323',\n              },\n              ticks: {\n                // Include a dollar sign in the ticks\n                callback: function(value, index, values) {\n                    return '$' + value.toLocaleString(\"en-US\");\n                }\n              }\n            }  \n          }\n        }\n      });\n      // end of the Intersection Observer\n    };\n  })\n}, dataPageOptions);\nconst marketCryptoPriceContainer = document.querySelector('.marketCryptocurrrencyChartContainer');\nmarketsCryptoObserver.observe(marketCryptoPriceContainer);\n\n\n  // MARKETS PAGE -- PUBLIC EXCHANGES, STAKERS & MINERS // MARKETS PAGE -- PUBLIC EXCHANGES, STAKERS & MINERS\nconst marketsStocksObserver = new IntersectionObserver(function(entries, marketsStocksObserver) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      const myAPIkey = 'GH9DTBAMAJL2HKD1';\n\n      // CODE FOR CHANGING THE CHART SCALE\n      let chartScale = 'logarithmic'; //logarithmic or linear\n      const autoChartOption = document.querySelector('.stockAutoChartOption');\n      autoChartOption.addEventListener('click', changeChartScale)\n      const logChartOption = document.querySelector('.stockLogChartOption');\n      logChartOption.addEventListener('click', changeChartScale);\n      function changeChartScale(event) {\n      if (event.target.classList.contains('autoChartOption')) {\n        autoChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.6)';\n        logChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.2)';\n        chartScale = 'linear';\n        stockPriceChart.options.scales.y.type = chartScale;\n        stockPriceChart.update();\n      } \n      else {\n        autoChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.2)';\n        logChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.6)';\n        chartScale = 'logarithmic';\n        stockPriceChart.options.scales.y.type = chartScale;\n        stockPriceChart.update();\n      }\n      };\n\n      // variables for price, time, and ticker\n      let timeframeData = [];\n      let stockPriceData = [];\n      let reversedFetchedPrice = [];\n      let fetchedPriceData = [];\n      let ticker = 'MSTR';\n\n      // INVESTMENT RETURN DATA AND CHART\n      let selectedAsset = 'bitcoin';\n      let investmentAmounts = [];\n      let backgroundColor = 'rgb(255,255,255, 0.15)';\n\n      let timeframe = 'TIME_SERIES_DAILY_ADJUSTED'; // TIME_SERIES_DAILY_ADJUSTED, TIME_SERIES_WEEKLY_ADJUSTED\n      let timeSeries = 'Time Series (Daily)'; // Time Series (Daily), Weekly Adjusted Time Series\n\n      // function to initially fetch the data\n      async function fetchData() {\n        try {\n          const options = {\n              method: 'GET',\n              headers: {\n                  'X-RapidAPI-Key': '5abcde3910mshe635fb57c055c0fp10d768jsna1801b9b4a77',\n                  'X-RapidAPI-Host': 'real-time-finance-data.p.rapidapi.com'\n              }\n          };\n\n          // Creating the URL and fetching the data\n          let URL = `https://www.alphavantage.co/query?function=${timeframe}&symbol=${ticker}&apikey=${myAPIkey}`;\n          let response = await fetch(URL);\n          let data = await response.json();\n\n          // to fetch timeframe\n          timeframeData = [];\n          let unorderedTimeframeData = [];\n          let timeSeriesData = await data[`${timeSeries}`];\n          for (const time in timeSeriesData) {  \n            unorderedTimeframeData.push(time);\n          }\n          timeframeData = unorderedTimeframeData.reverse();\n          stockPriceChart.data.labels = timeframeData;\n\n          // to fetch price data\n          stockPriceData = [];\n          reversedFetchedPrice = [];\n          fetchedPriceData = [];\n          let priceSeriesData = await data[`${timeSeries}`];\n          let allPriceDataObject = Object.values(priceSeriesData);\n          for (let i = 0; i < allPriceDataObject.length; i++) {\n            let allPrices = allPriceDataObject[`${i}`];\n            let closePrices = Object.values(allPrices);\n            let closePrice = Number(closePrices[4]);\n            reversedFetchedPrice.push(closePrice);\n          };\n          fetchedPriceData = reversedFetchedPrice.reverse();\n          \n          let dataObject = {\n            label: `Price of ${ticker}`,\n            data: fetchedPriceData,\n            fill: false,\n            pointRadius: 0,\n            borderWidth: 1,\n            backgroundColor: '#FFFFFF',\n            borderColor: '#FFFFFF',\n            yAxisID: 'y'\n          };\n          stockPriceData.push(dataObject);\n          stockPriceChart.data.datasets = stockPriceData;\n\n          // update chart\n          stockPriceChart.update();\n        } \n        catch(error) {\n          console.log(error);\n          console.log('could not fetch data');\n        };\n      };\n      fetchData();\n\n      async function fetchStockList() {\n\n        try {\n          let URL = `https://api.coingecko.com/api/v3/companies/public_treasury/${selectedAsset}`;\n\n          let response = await fetch(URL);\n          let data = await response.json();\n\n          // fetch the names of the stocks\n          let stockName = await data['companies'];\n          const stockList = document.querySelector('.stockList');\n          let arrayNumber = 0;\n          stockList.innerHTML = '';\n          for (const names of stockName) {\n            // create the element for the drop down list\n            const optionEl = document.createElement('option');\n            optionEl.classList.add(arrayNumber);\n            arrayNumber++;\n            let nameOfStock = names['name'];\n            optionEl.appendChild(document.createTextNode(nameOfStock));\n            let fullTicker = names['symbol'];\n            let justTicker = fullTicker.split(':').pop();\n            let singleticker = justTicker.trim();\n\n            // change necessary ticker names\n            if (singleticker == 'Hut-8') {\n              singleticker = 'HUT';\n            } else if (singleticker == '3659') {\n              singleticker = 'NEXOF';\n            } else if (singleticker == 'VYGR') {\n              singleticker = 'VYGVQ';\n            } else if (singleticker == 'BIGG') {\n              singleticker = 'BBKCF';\n            } else if (singleticker == 'DCC') {\n              singleticker = 'DGGXF';\n            } else if (singleticker == 'FORT') {\n              singleticker = 'FRTTF';\n            } else if (singleticker == 'MODE') {\n              singleticker = 'MODGF';\n            } else if (singleticker == 'DASH') {\n              singleticker = 'NPPTF';\n            }\n            optionEl.value = singleticker;\n\n            // if function to remove unnecessary stocks from the list\n            if (singleticker !== '1357' && singleticker !== 'AKER' && singleticker !== 'HODL' && singleticker !== 'BROOK') {\n              stockList.appendChild(optionEl);\n            };\n          }\n\n          // fetch the data on the text section\n          let publicStockHoldingFullName = document.querySelector('.publicStockHoldingFullName');\n          let selectedStock = stockList.options[stockList.selectedIndex].text;\n          publicStockHoldingFullName.innerHTML = selectedStock; \n          let publicStockHoldingTicker = document.querySelector('.publicStockHoldingTicker');\n          publicStockHoldingTicker.innerHTML = stockList.value;\n          let nameofSelectedCryptoPublicCompany = document.querySelector('.nameofSelectedCryptoPublicCompany');\n          let UpperCaseSelectedAsset = selectedAsset.charAt(0).toUpperCase() + selectedAsset.slice(1);\n          nameofSelectedCryptoPublicCompany.innerHTML = UpperCaseSelectedAsset;\n\n          // fetch the total holding data\n          let firstCompanydata = await data['companies'][0];\n          let companyTotalCryptoHoldings = document.querySelector('.companyTotalCryptoHoldings');\n          let unformattedTotalCryptoHoldings = await firstCompanydata['total_holdings'];\n          let totalCryptoHoldings = unformattedTotalCryptoHoldings.toLocaleString();\n          companyTotalCryptoHoldings.innerHTML = totalCryptoHoldings;\n          let companyTotalUSDholdings = document.querySelector('.companyTotalUSDholdings');\n          let unformattedUsdHoldings = await firstCompanydata['total_current_value_usd'];\n          let totalUsdHoldings = unformattedUsdHoldings.toLocaleString();\n          companyTotalUSDholdings.innerHTML = totalUsdHoldings;\n\n          // fetch the dominance and total supply\n          let percentOfTotalSupply = document.querySelector('.publicCompanyMarketCapDominance');\n          percentOfTotalSupply.innerHTML = firstCompanydata['percentage_of_total_supply'];\n\n          // fetch the investment returns\n          let InitialInvestmentValue = await stockName[0]['total_entry_value_usd'];\n          let = currentInvestmentValue = await stockName[0]['total_current_value_usd'];\n          publicCompanyInvestmentReturns.data.datasets.forEach(data => {\n            data.data.push(InitialInvestmentValue);\n            data.data.push(currentInvestmentValue);\n          });\n\n          function changeColorOfInvestmentChart() {\n            if (InitialInvestmentValue < currentInvestmentValue) {\n              backgroundColor = 'rgb(0,255,0, 0.15)';\n            } else {\n              backgroundColor = 'rgb(255,0,0, 0.15)';\n            }\n            publicCompanyInvestmentReturns.data.datasets.forEach(data => {\n              data.backgroundColor = backgroundColor;\n            });\n          };\n          changeColorOfInvestmentChart();\n\n          publicCompanyInvestmentReturns.update();\n        }\n        catch(error) {\n          console.log(error);\n          console.log('Could not fetch the list of stocks...')\n          setTimeout(fetchStockList, 3000);\n        }\n      };\n      fetchStockList();\n\n      // function to initially fetch the stock names and company data\n      function changeTimeframe() {\n\n        if (publicStockChartTimeframe.value == 'TIME_SERIES_DAILY_ADJUSTED') {\n          timeSeries = 'Time Series (Daily)'; // Time Series (Daily), Weekly Adjusted Time Series\n          timeframe = publicStockChartTimeframe.value;\n\n        } else {\n          timeSeries = 'Weekly Adjusted Time Series'; // Time Series (Daily), Weekly Adjusted Time Series\n          timeframe = publicStockChartTimeframe.value;\n        }\n        fetchData();\n        changeHeldAsset();\n        fetchStockList();\n      };\n      const publicStockChartTimeframe = document.querySelector('.publicStockTimeframeSelection');\n      publicStockChartTimeframe.addEventListener('change', changeTimeframe);\n\n      // change the displayed stock data and price action\n      function changeDisplayedStock() {\n        // for the stock chart\n        const listOfCryptoCompanies = document.querySelector('.listOfCryptoCompanies');\n        let selectedStockTicker = listOfCryptoCompanies.value;\n        ticker = selectedStockTicker;\n        fetchData();\n\n        // change company full name and ticker symbol\n        let selectedStock = listOfCryptoCompanies.options[listOfCryptoCompanies.selectedIndex].text;\n        let publicStockHoldingFullName = document.querySelector('.publicStockHoldingFullName');\n        publicStockHoldingFullName.innerHTML = selectedStock;\n        let publicStockHoldingTicker = document.querySelector('.publicStockHoldingTicker');\n        publicStockHoldingTicker.innerHTML = listOfCryptoCompanies.value;\n        let nameofSelectedCryptoPublicCompany = document.querySelector('.nameofSelectedCryptoPublicCompany');\n        nameofSelectedCryptoPublicCompany.innerHTML = selectedAsset.charAt(0).toUpperCase() + selectedAsset.slice(1);\n\n        // change the company holdings and % of total supply\n        async function reFetchCompanyData() {\n          try {\n\n            let URL = `https://api.coingecko.com/api/v3/companies/public_treasury/${selectedAsset}`;\n            let response = await fetch(URL);\n            let data = await response.json();\n            // for the stock number within the list\n            let selectedStockEl = listOfCryptoCompanies.options[listOfCryptoCompanies.selectedIndex];\n            let selectedStockOrderValue = Array.from(selectedStockEl.classList);\n            let stockNumberInArray = selectedStockOrderValue.toString();\n            // the crypto holdings\n            let companyCryptoHoldings = await data['companies'][stockNumberInArray]['total_holdings'];\n            let companyTotalCryptoHoldings = document.querySelector('.companyTotalCryptoHoldings');\n            companyTotalCryptoHoldings.innerHTML = companyCryptoHoldings.toLocaleString();\n            // the holdings in USD\n            let companyUsdHoldings = await data['companies'][stockNumberInArray]['total_current_value_usd'];\n            let companyTotalUsdHoldings = document.querySelector('.companyTotalUSDholdings');\n            companyTotalUsdHoldings.innerHTML = companyUsdHoldings.toLocaleString();\n\n            // the % of total supply\n            let percentOfTotalSupply = await data['companies'][stockNumberInArray]['percentage_of_total_supply'];\n            let percentOfTotalSupplyEl = document.querySelector('.publicCompanyMarketCapDominance');\n            percentOfTotalSupplyEl.innerHTML = percentOfTotalSupply;\n\n            // the investment value\n            investmentAmounts = [];\n            let initialInvestmentValue = await data['companies'][stockNumberInArray]['total_entry_value_usd'];\n            let currentInvestmentValue = await data['companies'][stockNumberInArray]['total_current_value_usd'];\n            investmentAmounts.push(initialInvestmentValue);\n            investmentAmounts.push(currentInvestmentValue);\n            publicCompanyInvestmentReturns.data.datasets[0].data = investmentAmounts;\n            if (initialInvestmentValue < currentInvestmentValue) {\n              backgroundColor = 'rgb(0,255,0, 0.15)';\n            } else {\n              backgroundColor = 'rgb(255,0,0, 0.15)';\n            }\n            publicCompanyInvestmentReturns.data.datasets[0].backgroundColor = backgroundColor;\n            publicCompanyInvestmentReturns.update();\n          }\n          catch(error) {\n            console.log(error);\n            console.log('Could not change displayed stock info...')\n          }\n        };\n        reFetchCompanyData();\n\n      };\n      const listOfCryptoCompanies = document.querySelector('.listOfCryptoCompanies');\n      listOfCryptoCompanies.addEventListener('change', changeDisplayedStock);\n\n      // if the user changes the held asset\n      const heldAssetByPublicCompanies = document.querySelectorAll('.heldAssetByPublicCompanies');\n      function changeHeldAsset(event) {\n        const chartBTCButton = document.querySelector('.chartBTCButton');\n        const chartETHButton = document.querySelector('.chartETHButton');\n        if (event.target.value == 'bitcoin') {\n          chartBTCButton.style.backgroundColor = 'rgb(128, 128, 128, 0.6)';\n          chartETHButton.style.backgroundColor = 'rgb(128, 128, 128, 0.2)';\n          selectedAsset = event.target.value;\n          changeDisplayedStock();\n        } else {\n          chartBTCButton.style.backgroundColor = 'rgb(128, 128, 128, 0.2)';\n          chartETHButton.style.backgroundColor = 'rgb(128, 128, 128, 0.6)';\n          selectedAsset = event.target.value;\n          changeDisplayedStock();\n        }\n\n      };\n      heldAssetByPublicCompanies.forEach(asset => {\n        asset.addEventListener('click', changeHeldAsset);\n      });\n\n      // CODE FOR THE MAIN PRICE CHART\n      const stockPriceCanvas = document.querySelector('.marketStockPrice');\n      let stockPriceChart = new Chart(stockPriceCanvas, {\n        type: 'line',\n        data: {\n          labels: timeframeData,\n          datasets: stockPriceData,\n        },\n        options: {\n          type: chartScale,\n          display: true,\n          position: 'left',\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              grid: {\n                color: '#232323',\n              },\n              ticks: {\n                callback: function(value, index, values) {\n                  return '$' + value.toLocaleString(\"en-US\");\n                }\n              }\n            }\n          }\n        }\n      });\n      window.addEventListener(\"resize\", (event) => {\n        stockPriceCanvas.style.width = '100%';\n        stockPriceCanvas.style.height = '100%';\n      });\n\n      // CODE FOR THE INVESTMENT RETURN CHART\n      const investmentReturnChart = document.querySelector('.publicStockAssetHoldingChart');\n      let publicCompanyInvestmentReturns = new Chart(investmentReturnChart, {\n        type: 'line',\n        data: {\n          labels: ['Initial Investment', 'Current Value'],\n          datasets: [{\n            label: 'Gain/Loss',\n            data: investmentAmounts,\n            fill: true,\n            pointRadius: 0,\n            borderWidth: 1,\n            backgroundColor: backgroundColor,\n            borderColor: '#FFFFFF',\n          }]\n        },\n        options: {\n          type: 'logarithmic',\n          display: true,\n          position: 'left',\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              grid: {\n                color: '#232323',\n              },\n              ticks: {\n                beginAtZero: false,\n                callback: function(value, index, values) {\n                  return '$' + value / 1e6 + ' ' + 'M';\n                }\n              }\n            }\n          }\n        }\n      });\n      window.addEventListener(\"resize\", (event) => {\n        const publicStockAssetHoldingChart = document.querySelector('.publicStockAssetHoldingChart');\n        publicStockAssetHoldingChart.style.width = '100%';\n      });\n\n\n\n\n    // End of the if statement for the intersection observer\n    }\n  })\n}, dataPageOptions);\nconst marketPublicstockChartContainer = document.querySelector('.marketPublicstockChartContainer');\nmarketsStocksObserver.observe(marketPublicstockChartContainer);\n\n\n  // MARKETS PAGE -- COMPARE MARKET CAPS // COMPARE MARKET CAPS // COMPARE MARKET CAPS\nconst marketsCompareMarketCapObserver = new IntersectionObserver(function(entries, marketsCompareMarketCapObserver) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n\n      // CODE FOR CHANGING THE CHART SCALE\n      let chartScale = 'linear'; //logarithmic or linear\n      const autoChartOption = document.querySelector('.marketCapAutoChartOption');\n      autoChartOption.addEventListener('click', changeChartScale)\n      const logChartOption = document.querySelector('.marketCaplogChartOption');\n      logChartOption.addEventListener('click', changeChartScale);\n      function changeChartScale(event) {\n      if (event.target.classList.contains('autoChartOption')) {\n          autoChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.6)';\n          logChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.2)';\n          chartScale = 'linear';\n          displayedChart.options.scales.y.type = chartScale;\n          displayedChart.update();\n      } else {\n              autoChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.2)';\n              logChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.6)';\n              chartScale = 'logarithmic';\n              displayedChart.options.scales.y.type = chartScale;\n              displayedChart.update();\n          }\n      };\n\n      // variables for timeframe\n      let chartTime = []; //fetched data\n      let selectedTimePeriod = '365';\n\n      // variables for selected assets\n      let assetPriceData = []; //fetched data\n      let firstSelectedAssetID = 'bitcoin';\n      let firstSelectedAssetName = 'Bitcoin';\n      let secondSelectedAssetID = 'ethereum';\n      let secondSelectedAssetName = 'Ethereum';\n\n      // fetch initial data\n      async function fetchData() {\n          try {\n          // FETCH ASSET 1 DATA -- FETCH ASSET 1 DATA \n          let URLOne = `https://api.coingecko.com/api/v3/coins/${firstSelectedAssetID}/market_chart?vs_currency=usd&days=${selectedTimePeriod}`;\n          let responseOne = await fetch(URLOne);\n          let dataOne = await responseOne.json();\n          let marketcapAndTimeDataOne = await dataOne.market_caps;\n\n          // FETCH ASSET 2 DATA -- FETCH ASSET 2 DATA\n          let URLTwo = `https://api.coingecko.com/api/v3/coins/${secondSelectedAssetID}/market_chart?vs_currency=usd&days=${selectedTimePeriod}`;\n          let responseTwo = await fetch(URLTwo);\n          let dataTwo = await responseTwo.json();\n          let marketcapAndTimeDataTwo = await dataTwo.market_caps;\n\n          // ADD LONGEST TIMEFRAME\n          if (marketcapAndTimeDataOne.length > marketcapAndTimeDataTwo.length) {\n            // clear old data from chart\n            chartTime = [];\n            assetPriceData = [];\n            \n            // adding the fetched time to the chart\n            for (const time of marketcapAndTimeDataOne) {\n              let epochTimeframe = await time[0];\n              let formattedDate = new Date(epochTimeframe);\n              let longTimeframe = formattedDate.toUTCString();\n              let timeframe = longTimeframe.substring(5, 16);\n              chartTime.push(timeframe);\n            };\n\n            // ADD ASSET 1 DATA -- ADD ASSET 1 DATA\n            let fetchedPriceData = [];\n            for (const marketCap of marketcapAndTimeDataOne) {\n              let marketCaps = await marketCap[1];\n              fetchedPriceData.push(marketCaps);\n            };\n            let DataObject = {\n              label: `Price of ${firstSelectedAssetName}`,\n              data: fetchedPriceData,\n              fill: false,\n              pointRadius: 0,\n              borderWidth: 1,\n              backgroundColor: '#FFFFFF',\n              borderColor: '#FFFFFF',\n              yAxisID: 'y'\n            };\n            assetPriceData.push(DataObject);\n\n            // ADD ASSET 2 DATA -- ADD ASSET 2 DATA\n            let missingZeroValues = marketcapAndTimeDataOne.length - marketcapAndTimeDataTwo.length;\n            let fetchedPriceDataTwo = [];\n            for (let i = 0; i < missingZeroValues; i++) {\n              fetchedPriceDataTwo.push('');\n            };\n\n            for (const marketCap of marketcapAndTimeDataTwo) {\n              let marketCaps = await marketCap[1];\n              fetchedPriceDataTwo.push(marketCaps);\n            };\n            let DataObjectTwo = {\n              label: `Price of ${secondSelectedAssetName}`,\n              data: fetchedPriceDataTwo,\n              fill: false,\n              pointRadius: 0,\n              borderWidth: 1,\n              backgroundColor: '#FF0000',\n              borderColor: '#FF0000',\n              yAxisID: 'y'\n            };\n            assetPriceData.push(DataObjectTwo);\n          } else {\n            // clear old data from chart\n            chartTime = [];\n            assetPriceData = [];\n\n            // adding the fetched time to the chart\n            for (const time of marketcapAndTimeDataTwo) {\n              let epochTimeframe = await time[0];\n              let formattedDate = new Date(epochTimeframe);\n              let longTimeframe = formattedDate.toUTCString();\n              let timeframe = longTimeframe.substring(5, 16);\n              chartTime.push(timeframe);\n            };\n\n            // ADD ASSET 1 DATA -- ADD ASSET 1 DATA\n            let fetchedPriceData = [];\n            let missingZeroValues = marketcapAndTimeDataTwo.length - marketcapAndTimeDataOne.length;\n            for (let i = 0; i < missingZeroValues; i++) {\n              fetchedPriceData.push('');\n            };\n            for (const marketCap of marketcapAndTimeDataOne) {\n              let marketCaps = await marketCap[1];\n              fetchedPriceData.push(marketCaps);\n            };\n            let DataObject = {\n              label: `Price of ${firstSelectedAssetName}`,\n              data: fetchedPriceData,\n              fill: false,\n              pointRadius: 0,\n              borderWidth: 1,\n              backgroundColor: '#FFFFFF',\n              borderColor: '#FFFFFF',\n              yAxisID: 'y'\n            };\n            assetPriceData.push(DataObject);\n\n            // ADD ASSET 2 DATA -- ADD ASSET 2 DATA\n            let fetchedPriceDataTwo = [];\n            for (const marketCap of marketcapAndTimeDataTwo) {\n              let marketCaps = await marketCap[1];\n              fetchedPriceDataTwo.push(marketCaps);\n            };\n            let DataObjectTwo = {\n              label: `Price of ${secondSelectedAssetName}`,\n              data: fetchedPriceDataTwo,\n              fill: false,\n              pointRadius: 0,\n              borderWidth: 1,\n              backgroundColor: '#FF0000',\n              borderColor: '#FF0000',\n              yAxisID: 'y'\n            };\n            assetPriceData.push(DataObjectTwo);\n          };\n\n\n          // UPDATE CHART WITH DATA\n          displayedChart.data.datasets = assetPriceData;\n          displayedChart.data.labels = chartTime;\n          displayedChart.update();\n        }\n        catch(error) {\n          console.log('could not fetch initial data...');\n        }\n      }\n      fetchData();\n\n        // generate list of assets and add market cap metrics\n      const assetListURL = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=1&sparkline=false';\n      const assetListElOne = document.querySelector('.cryptoCompareAssetListOne');\n      const assetListElTwo = document.querySelector('.cryptoCompareAssetListTwo');\n      async function getAssetList() {\n        try {\n          // the number of the asset inside the array\n          let assetCountInArrayOne = 0;\n          let assetCountInArrayTwo = 0;\n\n          // fetch the list of assets\n          let response = await fetch(assetListURL);\n          let assetListData = await response.json();\n\n          console.log(assetListData);\n\n          // ASSET 1 DATA\n          for (const asset of assetListData) {\n            // for the ID \n            let assetID = await asset.id;\n            const listOptions = document.createElement('option');\n            listOptions.classList.add(assetID);\n            listOptions.classList.add(assetCountInArrayOne);\n            assetCountInArrayOne++;\n\n            // for the display name\n            let assetName = await asset.name;\n            listOptions.value = await assetName;\n\n            // add option onto the dropdown selection\n            listOptions.appendChild(document.createTextNode(assetName));\n            // add element to lists\n            assetListElOne.appendChild(listOptions);\n          }\n          // variables for the asset metrics within panel\n          let marketCapValuationOne = document.querySelector('.marketCapValuationOne');\n          let fullyDilutedValOne = document.querySelector('.fullyDilutedValOne');\n          let percentFromATHOne = document.querySelector('.percentFromATHOne');\n\n          // getting the number within the array\n          let firstListOfCryptos = document.querySelector('.cryptoCompareAssetListOne');\n          let firstNumberInCryptoList = firstListOfCryptos.options[firstListOfCryptos.selectedIndex];\n          let firstNumberInList = firstNumberInCryptoList.classList[1];\n\n          // is it in the millions or billions\n          let totalMarketCapOne = assetListData[firstNumberInList]['market_cap'];\n          if (totalMarketCapOne > 1000000000) {\n            // market cap\n            let shortenedMarketCapOne = totalMarketCapOne / 1000000000;\n            let formattedTotalMarketCapOne = shortenedMarketCapOne.toLocaleString();\n            marketCapValuationOne.innerHTML = `$ ${formattedTotalMarketCapOne} B`;\n\n            // fully diluted valuation\n            let fullyDilutedvalOne = assetListData[firstNumberInList]['fully_diluted_valuation'];\n            let shortendedFullyDilutedValOne = (fullyDilutedvalOne / 1000000000).toLocaleString();\n            let formattedFullyDilutedValOne = `$ ${shortendedFullyDilutedValOne} B`;\n            fullyDilutedValOne.innerHTML = formattedFullyDilutedValOne;\n          } else {\n            // market cap\n            let totalMarketCapOne = assetListData[firstNumberInList]['market_cap'];\n            let shortenedMarketCapOne = totalMarketCapOne / 1000000000;\n            let formattedTotalMarketCapOne = shortenedMarketCapOne.toLocaleString();\n            marketCapValuationOne.innerHTML = `$ ${formattedTotalMarketCapOne} M`;\n\n            // fully diluted valuation\n            let fullyDilutedvalOne = assetListData[firstNumberInList]['fully_diluted_valuation'];\n            let shortendedFullyDilutedValOne = (fullyDilutedvalOne / 1000000000).toLocaleString();\n            let formattedFullyDilutedValOne = `$ ${shortendedFullyDilutedValOne} M`;\n            fullyDilutedValOne.innerHTML = formattedFullyDilutedValOne;\n          }\n          // % from all time high\n          let percentFromAllTimeHighOne = assetListData[firstNumberInList]['ath_change_percentage'];\n          percentFromATHOne.innerHTML = `% from ATH: ${Math.round(percentFromAllTimeHighOne.toLocaleString())}%`;\n\n          // ASSET 2 DATA\n          for (const asset of assetListData) {\n            // for the ID \n            let assetID = await asset.id;\n            const listOptions = document.createElement('option');\n            listOptions.classList.add(assetID);\n            listOptions.classList.add(assetCountInArrayTwo);\n            assetCountInArrayTwo++;\n\n            // for the display name\n            let assetName = await asset.name;\n            listOptions.value = await assetName;\n\n            // add option onto the dropdown selection\n            listOptions.appendChild(document.createTextNode(assetName));\n            // add element to lists\n            assetListElTwo.appendChild(listOptions);\n          }\n          assetListElTwo.selectedIndex = 1;\n\n          let marketCapValuationTwo = document.querySelector('.marketCapValuationTwo');\n          let fullyDilutedValTwo = document.querySelector('.fullyDilutedValTwo');\n          let percentFromATHTwo = document.querySelector('.percentFromATHTwo');\n\n          let secondListOfCryptos = document.querySelector('.cryptoCompareAssetListTwo');\n          let secondNumberInCryptoList = secondListOfCryptos.options[secondListOfCryptos.selectedIndex];\n          let secondNumberInList = secondNumberInCryptoList.classList[1];\n\n          // is it in the millions or billions\n          let totalMarketCapTwo = assetListData[secondNumberInList]['market_cap'];\n          if (totalMarketCapTwo > 1000000000) {\n            // market cap\n            let shortenedMarketCapTwo = totalMarketCapTwo / 1000000000;\n            let formattedTotalMarketCapTwo = shortenedMarketCapTwo.toLocaleString();\n            marketCapValuationTwo.innerHTML = `$ ${formattedTotalMarketCapTwo} B`;\n\n            // fully diluted valuation\n            let fullyDilutedvalTwo = assetListData[secondNumberInList]['fully_diluted_valuation'];\n            let shortendedFullyDilutedValTwo = (fullyDilutedvalTwo / 1000000000).toLocaleString();\n            let formattedFullyDilutedValTwo = `$ ${shortendedFullyDilutedValTwo} B`;\n            fullyDilutedValTwo.innerHTML = formattedFullyDilutedValTwo;\n          } else {\n            // market cap\n            let totalMarketCapTwo = assetListData[secondNumberInList]['market_cap'];\n            let shortenedMarketCapTwo = totalMarketCapTwo / 1000000000;\n            let formattedTotalMarketCapTwo = shortenedMarketCapTwo.toLocaleString();\n            marketCapValuationTwo.innerHTML = `$ ${formattedTotalMarketCapTwo} M`;\n\n            // fully diluted valuation\n            let fullyDilutedvalTwo = assetListData[secondNumberInList]['fully_diluted_valuation'];\n            let shortendedFullyDilutedValTwo = (fullyDilutedvalTwo / 1000000000).toLocaleString();\n            let formattedFullyDilutedValTwo = `$ ${shortendedFullyDilutedValTwo} M`;\n            fullyDilutedValTwo.innerHTML = formattedFullyDilutedValTwo;\n          }\n          // % from all time high\n          let percentFromAllTimeHighTwo = assetListData[secondNumberInList]['ath_change_percentage'];\n          percentFromATHTwo.innerHTML = `% from ATH: ${Math.round(percentFromAllTimeHighTwo.toLocaleString())}%`;\n        }\n        catch(error) {\n            console.log(error);\n            console.log('cannot get list of assets from CoinGecko...');\n        }\n      }\n      getAssetList();\n\n      async function reFetchAssetMetrics() {\n        try {\n\n          // re-fetch the list of assets\n          let response = await fetch(assetListURL);\n          let assetListData = await response.json();\n\n          // ASSET 1 DATA\n          // variables for the asset metrics within panel\n          let marketCapValuationOne = document.querySelector('.marketCapValuationOne');\n          let fullyDilutedValOne = document.querySelector('.fullyDilutedValOne');\n          let percentFromATHOne = document.querySelector('.percentFromATHOne');\n\n          // getting the number within the array\n          let firstListOfCryptos = document.querySelector('.cryptoCompareAssetListOne');\n          let firstNumberInCryptoList = firstListOfCryptos.options[firstListOfCryptos.selectedIndex];\n          let firstNumberInList = firstNumberInCryptoList.classList[1];\n\n          // is it in the millions or billions\n          let totalMarketCapOne = assetListData[firstNumberInList]['market_cap'];\n          if (totalMarketCapOne > 1000000000) {\n            // market cap\n            let shortenedMarketCapOne = totalMarketCapOne / 1000000000;\n            let formattedTotalMarketCapOne = shortenedMarketCapOne.toLocaleString();\n            marketCapValuationOne.innerHTML = `${formattedTotalMarketCapOne} B`;\n\n            // fully diluted valuation\n            let fullyDilutedvalOne = assetListData[firstNumberInList]['fully_diluted_valuation'];\n            let shortendedFullyDilutedValOne = (fullyDilutedvalOne / 1000000000).toLocaleString();\n            let formattedFullyDilutedValOne = `${shortendedFullyDilutedValOne} B`;\n            fullyDilutedValOne.innerHTML = formattedFullyDilutedValOne;\n          } else {\n            // market cap\n            let totalMarketCapOne = assetListData[firstNumberInList]['market_cap'];\n            let shortenedMarketCapOne = totalMarketCapOne / 1000000000;\n            let formattedTotalMarketCapOne = shortenedMarketCapOne.toLocaleString();\n            marketCapValuationOne.innerHTML = `${formattedTotalMarketCapOne} M`;\n\n            // fully diluted valuation\n            let fullyDilutedvalOne = assetListData[firstNumberInList]['fully_diluted_valuation'];\n            let shortendedFullyDilutedValOne = (fullyDilutedvalOne / 1000000000).toLocaleString();\n            let formattedFullyDilutedValOne = `${shortendedFullyDilutedValOne} M`;\n            fullyDilutedValOne.innerHTML = formattedFullyDilutedValOne;\n          }\n          // % from all time high\n          let percentFromAllTimeHighOne = assetListData[firstNumberInList]['ath_change_percentage'];\n          percentFromATHOne.innerHTML = `% from ATH: ${Math.round(percentFromAllTimeHighOne.toLocaleString())}%`;\n\n          // ASSET 2 DATA\n          let marketCapValuationTwo = document.querySelector('.marketCapValuationTwo');\n          let fullyDilutedValTwo = document.querySelector('.fullyDilutedValTwo');\n          let percentFromATHTwo = document.querySelector('.percentFromATHTwo');\n\n          let secondListOfCryptos = document.querySelector('.cryptoCompareAssetListTwo');\n          let secondNumberInCryptoList = secondListOfCryptos.options[secondListOfCryptos.selectedIndex];\n          let secondNumberInList = secondNumberInCryptoList.classList[1];\n\n          // is it in the millions or billions\n          let totalMarketCapTwo = assetListData[secondNumberInList]['market_cap'];\n          if (totalMarketCapTwo > 1000000000) {\n            // market cap\n            let shortenedMarketCapTwo = totalMarketCapTwo / 1000000000;\n            let formattedTotalMarketCapTwo = shortenedMarketCapTwo.toLocaleString();\n            marketCapValuationTwo.innerHTML = `${formattedTotalMarketCapTwo} B`;\n\n            // fully diluted valuation\n            let fullyDilutedvalTwo = assetListData[secondNumberInList]['fully_diluted_valuation'];\n            let shortendedFullyDilutedValTwo = (fullyDilutedvalTwo / 1000000000).toLocaleString();\n            let formattedFullyDilutedValTwo = `${shortendedFullyDilutedValTwo} B`;\n            fullyDilutedValTwo.innerHTML = formattedFullyDilutedValTwo;\n          } else {\n            // market cap\n            let totalMarketCapTwo = assetListData[secondNumberInList]['market_cap'];\n            let shortenedMarketCapTwo = totalMarketCapTwo / 1000000000;\n            let formattedTotalMarketCapTwo = shortenedMarketCapTwo.toLocaleString();\n            marketCapValuationTwo.innerHTML = `${formattedTotalMarketCapTwo} M`;\n\n            // fully diluted valuation\n            let fullyDilutedvalTwo = assetListData[secondNumberInList]['fully_diluted_valuation'];\n            let shortendedFullyDilutedValTwo = (fullyDilutedvalTwo / 1000000000).toLocaleString();\n            let formattedFullyDilutedValTwo = `${shortendedFullyDilutedValTwo} M`;\n            fullyDilutedValTwo.innerHTML = formattedFullyDilutedValTwo;\n          }\n          // % from all time high\n          let percentFromAllTimeHighTwo = assetListData[secondNumberInList]['ath_change_percentage'];\n          percentFromATHTwo.innerHTML = `% from ATH: ${Math.round(percentFromAllTimeHighTwo.toLocaleString())}%`;\n        }\n        catch(error) {\n            console.log(error);\n            console.log('cannot get list of assets from CoinGecko...');\n        }\n      }\n\n      // change timeframe\n      function changeTimeframe() {\n        selectedTimePeriod = '';\n        assetPriceData = [];\n        chartTime = [];\n\n        selectedTimePeriod = selectedTimePeriodEl.value;\n        fetchData();\n      }\n      const selectedTimePeriodEl = document.querySelector('.compareMarketCapTimeframeList');\n      selectedTimePeriodEl.addEventListener('change', changeTimeframe);\n\n      // change asset  -- asset 1\n      function changeAssetOne(event) {\n        let selectedOption = changeAssetOneEl.options[changeAssetOneEl.selectedIndex];\n        firstSelectedAssetID = selectedOption.classList[0];\n        firstSelectedAssetName = selectedOption.value;\n        fetchData();\n        reFetchAssetMetrics();\n      }\n      const changeAssetOneEl = document.querySelector('.cryptoCompareAssetListOne');\n      changeAssetOneEl.addEventListener('change', changeAssetOne);\n      // change asset -- asset 2\n      function changeAssetTwo(event) {\n        let selectedOption = changeAssetTwoEl.options[changeAssetTwoEl.selectedIndex];\n        secondSelectedAssetID = selectedOption.classList[0];\n        secondSelectedAssetName = selectedOption.value;\n        fetchData();\n        reFetchAssetMetrics();\n      }\n      const changeAssetTwoEl = document.querySelector('.cryptoCompareAssetListTwo');\n      changeAssetTwoEl.addEventListener('change', changeAssetTwo);\n      \n      // CODE FOR THE CHART.JS LIBRARY\n      const ctx = document.querySelector('.marketCryptoCap');\n      let displayedChart = new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: chartTime,\n          datasets: assetPriceData,\n        },\n        options: {\n          type: chartScale,\n          display: true,\n          position: 'left',\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              grid: {\n                color: '#232323',\n              },\n              ticks: {\n                // Include a dollar sign in the ticks\n                callback: function(value, index, values) {\n                  return '$' + value / 1e9 + ' ' + 'B';\n                }\n            }\n            }\n          }\n        }\n      });\n\n    // end of the Intersection Observer\n    }\n  })\n}, dataPageOptions);\nconst compareMarketCapContainer = document.querySelector('.compareMarketCapContainer');\nmarketsCompareMarketCapObserver.observe(compareMarketCapContainer);\n\n\n// MARKETS PAGE -- EXCHANGE VOLUMES // EXCHANGE VOLUMES // EXCHANGE VOLUMES\nconst exchangeVolumeObserver = new IntersectionObserver(function(entries, exchangeVolumeObserver) {\n  entries.forEach(entry => {\n\n      // CEX VOLUME COMPARISON -- CEX DOMINANCE // CEX DOMINANCE\n    let totalBitcoinVolume = 0;\n    let BitcoinPrice = 0;\n    let dominanceOfExchanges = [];\n    let nameOfAllExchanges = [];\n\n    // fetch the volume data\n    async function fetchVolumeData() {\n\n      try {\n        // FETCH THE TOTAL VOLUME & BTC PRICE \n        let TotalVolumeUrl = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=USD&order=market_cap_desc&per_page=100&page=1&sparkline=false';\n        let totalVolumeResponse = await fetch(TotalVolumeUrl);\n        let totalVolumeData = await totalVolumeResponse.json();\n  \n        // get the total BTC volume for all exchangs\n        let bitcoinTotalVolumeVariable = await totalVolumeData[0]['total_volume'];\n        totalBitcoinVolume = await bitcoinTotalVolumeVariable;\n  \n        // get the pric of Bitcoin\n        let currentBitcoinPrice = await totalVolumeData[0]['current_price'];\n        BitcoinPrice = currentBitcoinPrice;\n  \n          // FETCH SINGLE EXCHANGE DATA AND DOMINANCE\n        let singleExchanageUrl = 'https://api.coingecko.com/api/v3/exchanges';\n        let singleExchangeResponse = await fetch(singleExchanageUrl);\n        let singleExchangeData = await singleExchangeResponse.json();\n        // console.log(singleExchangeData);\n  \n        // get the name of the exchange\n        for (const names of singleExchangeData) {\n          let singleExchangeName = names['name'];\n          nameOfAllExchanges.push(singleExchangeName);\n        };\n  \n        // get the 24H btc volume for the exchange\n        for (const dominance of singleExchangeData) {\n          let totalBtcTraded = dominance['trade_volume_24h_btc'];\n          let totalUsdTraded = totalBtcTraded * BitcoinPrice;\n          let dominanceDecimal = totalUsdTraded / totalBitcoinVolume;\n          let dominancePercentage = dominanceDecimal * 100;\n          dominanceOfExchanges.push(dominancePercentage);\n        };\n  \n        // shorten array to only display certain amount \n        nameOfAllExchanges.splice(-80);\n        dominanceOfExchanges.splice(-80);\n  \n        // calculate other exchange dominance\n        let displayedExchangeDominance = 0;\n        let otherExchangeDominance = 0;\n        for (const percentage of dominanceOfExchanges) {\n          displayedExchangeDominance += percentage;\n        }\n        otherExchangeDominance = 100 - displayedExchangeDominance;\n  \n        // add the other exchanage data to array\n        nameOfAllExchanges.push('others');\n        dominanceOfExchanges.push(otherExchangeDominance);\n  \n        let CexDominancedata = {\n          labels: nameOfAllExchanges,\n          datasets: [{\n            label: ['% of Total CEX Volume'],\n            data: dominanceOfExchanges,\n            hoverOffset: 10,\n          }]\n        };\n  \n        // update the chart\n        cexVolumePieChart.data = CexDominancedata;\n        cexVolumePieChart.update();\n\n      } catch(error) {\n        console.log(error);\n        console.log('Could not fetch the exchange data..')\n      }\n    }\n    fetchVolumeData();\n\n      // CHART FOR THE CEX DOMINANCE\n    const cexVolumePieChartEl = document.querySelector('.cexVolumePieChart');\n    let cexVolumePieChart = new Chart(cexVolumePieChartEl, {\n      type: 'doughnut', \n      data: {},\n      options: {\n        cutout: '40%',\n        plugins: {\n          legend: {\n            display: true,\n            position: 'left'\n          }\n        }\n      }\n    });\n    window.addEventListener(\"resize\", (event) => {\n      cexVolumePieChartEl.style.width = '100%';\n    });\n\n      // CEX VOLUME COMPARISON -- FUTURES FUNDING RATE // FUTURES FUNDING RATE\n    let totalOpenInterest = 0;\n    let nameOfFuturesExchanges = [];\n    let openInterests = [];\n\n    // fetch all the futures exchanges\n    async function fetchFuturesExchanges() {\n\n      // fetching the data for futures exchanges\n      try {\n        let URL = 'https://api.coingecko.com/api/v3/derivatives/exchanges';\n        let response = await fetch(URL);\n        let data = await response.json();\n  \n        // extracting names and ID's of futures exchanages\n        for (const name of data) {\n          let futuresExchange = name['name'];\n          nameOfFuturesExchanges.push(futuresExchange);\n        }\n\n        // calculate the total open interest\n        for (const singleExchangeOi of data) {\n          if (singleExchangeOi['open_interest_btc'] > 0) {\n            let currentOpenInterest = singleExchangeOi['open_interest_btc'];\n            totalOpenInterest += currentOpenInterest;\n          }\n        }\n\n        // extract open interest of each exchange\n        for (const openInterest of data) {\n          let openInterestData = openInterest['open_interest_btc'];\n          let openInterestDominance = openInterestData / totalOpenInterest;\n          let openInterestDominancePercentage = openInterestDominance * 100;\n          openInterests.push(openInterestDominancePercentage);\n        };\n\n        // shorten array to only display certain amount \n        nameOfFuturesExchanges.splice(-30);\n        openInterests.splice(-30);\n\n        // add the the 'other' exchanges\n        let totalOiOtherExchanges = 0;\n        let otherExchangeDominance = 0; \n        for (const otherExchanges of openInterests) {\n          totalOiOtherExchanges += otherExchanges;\n          otherExchangeDominance = 100 - totalOiOtherExchanges;\n        }\n        openInterests.push(otherExchangeDominance);\n        nameOfFuturesExchanges.push('other');\n\n        let OpenInterestDominancedata = {\n          labels: nameOfFuturesExchanges,\n          datasets: [{\n            label: ['% of Total Open Interest'],\n            data: openInterests,\n            hoverOffset: 10,\n          }]\n        };\n  \n        // update the chart\n        openInterestPieChart.data = OpenInterestDominancedata;\n        openInterestPieChart.update();\n\n      } catch(error) {\n        console.log(error);\n        console.log('Could not fetch list of Futures exchanges...')\n      }\n    }\n    fetchFuturesExchanges();\n\n    // CHART FOR THE OPEN INTEREST DOMINANCE\n    const openInterestPieChartEl = document.querySelector('.futuresOpenInterestChart');\n    let openInterestPieChart = new Chart(openInterestPieChartEl, {\n      type: 'doughnut', \n      data: {},\n      options: {\n        cutout: '40%',\n        plugins: {\n          legend: {\n            display: true,\n            position: 'left'\n          }\n        }\n      }\n    });\n    window.addEventListener(\"resize\", (event) => {\n      openInterestPieChartEl.style.width = '100%';\n    });\n\n\n    // FUTURES FUNDING RATE \n    let fundingRateAsset = 'BTC';\n    let ticker = 'unexpired';\n    let futuresExchanges = [];\n    let fundingRates = [];\n    let exchangeOpenInterests = [];\n    let totalFundingRateOpenInterest = 0;\n    let weightedAverageFundingRate = 0;\n\n    async function fetchFundingRate() {\n      let URL = `https://api.coingecko.com/api/v3/derivatives?include_tickers=${ticker}`;\n      let response = await fetch(URL);\n      let data = await response.json();\n\n      futuresExchanges = [];\n      fundingRates = [];\n      exchangeOpenInterests = [];\n      totalFundingRateOpenInterest = 0;\n      weightedAverageFundingRate = 0;\n\n      try {\n          // extract the name of the exchange\n          for (const market of data) {\n            if (market['index_id'] === fundingRateAsset && market['funding_rate'] != 0 && market['open_interest'] > 0) {\n              let rawExchangeName = market['market'];\n              let exchangeRemoveFutureText = rawExchangeName.replace('Futures','');\n              let exchangeOneBracket = exchangeRemoveFutureText.replace('(','');\n              let exchangeTwoBracket = exchangeOneBracket.replace(')','');\n              let exchange = exchangeTwoBracket.replace('()','');\n              futuresExchanges.push(exchange);\n            }\n          }\n\n          // extract the funding rate\n          let averageFundingRate = 0;\n          for (const fundingRate of data) {\n            if (fundingRate['index_id'] === fundingRateAsset && fundingRate['funding_rate'] != 0 && fundingRate['open_interest'] > 0) {\n              let rate = fundingRate['funding_rate'];\n              fundingRates.push(rate);\n              averageFundingRate += rate;\n\n              // fetch open interest for single exchange\n              let IO = fundingRate['open_interest'];\n              exchangeOpenInterests.push(IO);\n\n              // getting the total open interest from the pulled funding rates\n              totalFundingRateOpenInterest += IO;\n            }\n          }\n\n          // get weighted average for funding rate\n          for (const weightedFR of data) {\n            if (weightedFR['index_id'] === fundingRateAsset && weightedFR['funding_rate'] != 0 && weightedFR['open_interest'] > 0) {\n              let weightForEachExchange = weightedFR['open_interest'] / totalFundingRateOpenInterest;\n              let FundingRate = weightedFR['funding_rate'];\n              let weightedFundingRate = weightForEachExchange * FundingRate;\n              weightedAverageFundingRate += weightedFundingRate;\n            }\n          }\n  \n        let fundingRateObject = {\n          labels: futuresExchanges,\n          datasets: [{\n            label: `${fundingRateAsset} funding rate %`,\n            data: fundingRates,\n            borderWidth: 2,\n            backgroundColor: 'rgb(255,255,255, 0.6)',\n            borderColor: 'rgb(255,255,255, 1)',\n            yAxisID: 'y',\n          },{\n            label: 'Exchange Open Interest',\n            data: exchangeOpenInterests,\n            borderWidth: 2,\n            backgroundColor: 'rgb(220, 20, 60, 0.2)',\n            borderColor: 'rgb(220, 20, 60, 0.4)',\n            yAxisID: 'y1'\n          }]\n        };\n\n        // add average funding rate\n        let averageFundingRateEl = document.querySelector('.averageFundingRate');\n        averageFundingRateEl.innerHTML = averageFundingRate.toFixed(3);\n\n        // add weighted funding rate\n        let weightedAverageFundingRateEl = document.querySelector('.weightedAverageFundingRate');\n        weightedAverageFundingRateEl.innerHTML = weightedAverageFundingRate.toFixed(3);\n  \n        // update chart with data\n        fundingRateChart.data = fundingRateObject;\n        fundingRateChart.update();\n\n      } catch(error) {\n        console.log(error);\n        console.log('Could not fetch Futures funding rates..')\n      }\n    }\n    fetchFundingRate();\n\n    function changeFundingRateAsset(event) {\n\n      let BtcFundingRateButton = document.querySelector('.BtcFundingRateButton');\n      let EthFundingRateButton = document.querySelector('.EthFundingRateButton');\n      let displayedFundingRateAsset = document.querySelector('.displayedFundingRateAsset');\n\n      if (event.target.classList.contains('BtcFundingRateButton')) {\n        fundingRateAsset = 'BTC';\n        BtcFundingRateButton.style.backgroundColor = 'rgba(128, 128, 128, 0.6)';\n        EthFundingRateButton.style.backgroundColor = 'rgba(128, 128, 128, 0.2)';\n        displayedFundingRateAsset.innerHTML = 'Bitcoin';\n      } else {\n        fundingRateAsset = 'ETH';\n        BtcFundingRateButton.style.backgroundColor = 'rgba(128, 128, 128, 0.2)';\n        EthFundingRateButton.style.backgroundColor = 'rgba(128, 128, 128, 0.6)';\n        displayedFundingRateAsset.innerHTML = 'Ethereum';\n      }\n      fetchFundingRate();\n    }\n    const changeFundingRateButton = document.querySelectorAll('.changeFundingRateButton');\n    changeFundingRateButton.forEach(button => {\n      button.addEventListener('click', changeFundingRateAsset)\n    });\n\n\n    // CHART FOR THE FUTURES FUNDING RATE\n    const fundingRateChartEl = document.querySelector('.fundingRateChart');\n    let  fundingRateChart = new Chart(fundingRateChartEl, {\n      type: 'bar',\n      data: {},\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          y: {\n            display: true,\n            position: 'left',\n            ticks: {\n              beginAtZero: true,\n              color: 'rgb(255,255,255, 0.8)'\n            },\n          }, \n          y1: {\n            display: true,\n            position: 'right',\n            ticks: {\n              beginAtZero: true,\n              // Include a dollar sign in the ticks\n              callback: function(value, index, values) {\n                return '$' + value / 1e9 + ' ' + 'B';\n              },\n              color: 'rgb(220, 20, 60, 0.8)'\n            }\n          },\n        }\n      }\n    });\n    window.addEventListener(\"resize\", (event) => {\n      fundingRateChartEl.style.height = '100%';\n      fundingRateChartEl.style.width = '100%';\n    });\n    \n    // end of the Intersection Observer\n  })\n}, dataPageOptions);\nconst exchangeDataContainer = document.querySelector('.volumePageContainer');\nexchangeVolumeObserver.observe(exchangeDataContainer);\n\n// DEFI PAGE -- TOTAL VALUE LOCKED // TOTAL VALUE LOCKED // TOTAL VALUE LOCKED \nconst totalvalueLockedObserver = new IntersectionObserver(function(entries, totalvalueLockedObserver) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n\n      const chainNameList = [];\n      const chainTotalValueLockedList = [];\n      let firstDisplayedTVL = '';\n      let secondDisplayedTVL = '';\n\n      // fetch the names of the protocols and the current TVL\n      async function fetchChainList() {\n\n        try {\n          let chainListURL = `https://api.llama.fi/chains`;\n          let chainListData = await fetch(chainListURL);\n          let chainListResponse = await chainListData.json();\n\n          // Add chains to list \n          const compareTVLListOne = document.querySelector('.compareTVLListOne');\n          const compareTVLListTwo = document.querySelector('.compareTVLListTwo');\n          \n          for (const chain of chainListResponse) {\n            // extract name \n            let chainName = chain['name'];\n            chainNameList.push(chainName);\n\n            // add TVL to list\n            let totalValueLocked = Math.round(chain['tvl']);\n            chainTotalValueLockedList.push(totalValueLocked);\n\n            // create option element and add to selection list \n            const TvlListOneEl = document.createElement('option');\n            const TvlListTwoEl = document.createElement('option');\n            TvlListOneEl.value = chainName;\n            TvlListOneEl.classList.add('listOneChain');\n            TvlListTwoEl.value = chainName;\n            TvlListTwoEl.classList.add('listTwoChain');\n            TvlListOneEl.appendChild(document.createTextNode(chainName));\n            TvlListTwoEl.appendChild(document.createTextNode(chainName));\n            compareTVLListOne.appendChild(TvlListOneEl);\n            compareTVLListTwo.appendChild(TvlListTwoEl);\n          }\n\n          // select second index for 2nd asset\n          compareTVLListTwo.selectedIndex = 1;\n\n          // Add current TVL for both selected chains\n          let firstChainInListName = await chainListResponse[0];\n          let nameOfFirstChainInList = await firstChainInListName['name'];\n          firstDisplayedTVL = nameOfFirstChainInList;\n          let firstChainInListTVL = Math.round(firstChainInListName['tvl']).toLocaleString();\n          const TotalValueLockedOne = document.querySelector('.TotalValueLockedOne');\n          TotalValueLockedOne.innerHTML = `$ ${firstChainInListTVL}`;\n\n          let secondChainInList = await chainListResponse[1];\n          let nameOfSecondChainInList = await secondChainInList['name'];\n          secondDisplayedTVL = nameOfSecondChainInList;\n          let secondCurrentTVL = Math.round(secondChainInList['tvl']).toLocaleString();\n          const TotalValueLockedTwo = document.querySelector('.TotalValueLockedTwo');\n          TotalValueLockedTwo.innerHTML = `$ ${secondCurrentTVL}`;\n\n\n        } catch(error) {\n          console.log(error);\n          console.log('Could not fetch chain list...');\n        }\n      }\n      fetchChainList();\n\n      // Change current displayed TVL\n      function changeDisplayedTVL() {\n\n        // Add selected current Total Value Locked data to panel one\n        const TotalValueLockedOne = document.querySelector('.TotalValueLockedOne');\n        const compareTVLListOne = document.querySelector('.compareTVLListOne');\n        let selectedChainOneIndex = compareTVLListOne.selectedIndex;\n        let selectedChainOne = compareTVLListOne.options[compareTVLListOne.selectedIndex].text;\n        firstDisplayedTVL = selectedChainOne;\n        let formatTVLValueOne = chainTotalValueLockedList[selectedChainOneIndex].toLocaleString();\n        TotalValueLockedOne.innerHTML = `$ ${formatTVLValueOne}`;\n\n        // Add selected current Total Value Locked data to panel two\n        const TotalValueLockedTwo = document.querySelector('.TotalValueLockedTwo');\n        const compareTVLListTwo = document.querySelector('.compareTVLListTwo');\n        let selectedChainTwoIndex = compareTVLListTwo.selectedIndex;\n        let selectedChainTwo = compareTVLListTwo.options[compareTVLListTwo.selectedIndex].text;\n        secondDisplayedTVL = selectedChainTwo;\n        let formatTVLValueTwo = chainTotalValueLockedList[selectedChainTwoIndex].toLocaleString();\n        TotalValueLockedTwo.innerHTML = `$ ${formatTVLValueTwo}`;\n\n        fetchHistoricalData();\n      }\n      const selectionOfChains = document.querySelectorAll('.selectionOfChains');\n      selectionOfChains.forEach(chain => {\n        chain.addEventListener('change', changeDisplayedTVL);\n      });\n\n      // CODE FOR CHANGING THE CHART SCALE\n      let chartScale = 'linear'; //logarithmic or linear\n      const autoChartOption = document.querySelector('.TVLAutoChartOption');\n      autoChartOption.addEventListener('click', changeChartScale);\n      const logChartOption = document.querySelector('.TVLlogChartOption');\n      logChartOption.addEventListener('click', changeChartScale);\n      function changeChartScale(event) {\n      if (event.target.classList.contains('autoChartOption')) {\n          autoChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.6)';\n          logChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.2)';\n          chartScale = 'linear';\n          compareTvlChart.options.scales.y.type = chartScale;\n          compareTvlChart.update();\n      } \n      else {\n        autoChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.2)';\n        logChartOption.style.backgroundColor = 'rgb(128, 128, 128, 0.6)';\n        chartScale = 'logarithmic';\n        compareTvlChart.options.scales.y.type = chartScale;\n        compareTvlChart.update();\n        }\n      };\n      \n      // fetch the historical data of the chain TVL\n      let totalValueLockedOne = [];\n      let totalValueLockedTwo = [];\n      let TVL_data = [];\n      let timeframe_data = [];\n      let selectedTimePeriod = 4380;\n      let mainEndpointURL = 'https://api.llama.fi/charts';\n      let TvlExtractionKey = 'totalLiquidityUSD';\n\n      async function fetchHistoricalData() {\n\n        try {\n\n          const totalValueLockedAggInput = document.querySelector('.totalValueLockedAggInput');\n          if (totalValueLockedAggInput.checked) {\n            mainEndpointURL = 'https://api.llama.fi/v2/historicalChainTvl';\n            TvlExtractionKey = 'tvl';\n          } else {\n            mainEndpointURL = 'https://api.llama.fi/charts';\n            TvlExtractionKey = 'totalLiquidityUSD';\n          };\n          \n          // DATASET 1 TVL -- DATASET 1 TVL\n          let firstDatasetURL = `${mainEndpointURL}/${firstDisplayedTVL}`;\n          let firstDatasetData = await fetch(firstDatasetURL);\n          let firstDatasetResponse = await firstDatasetData.json();\n\n          // DATASET 2 TVL -- DATASET 2 TVL\n          let secondDatasetURL = `${mainEndpointURL}/${secondDisplayedTVL}`;\n          let secondDatasetData = await fetch(secondDatasetURL);\n          let secondDatasetResponse = await secondDatasetData.json();\n\n          // IF THE FIRST DATASET IS LONGER\n          if (firstDatasetResponse.length > secondDatasetResponse.length) {\n\n            totalValueLockedOne = [];\n            totalValueLockedTwo = [];\n            TVL_data = [];\n            timeframe_data = [];\n\n            for (const timeframe of firstDatasetResponse) {\n              let epochTimeframe = timeframe['date'];\n              let startingDate = new Date(0);\n              let formattedDateValue = startingDate.setUTCSeconds(epochTimeframe);\n              let formattedDate = new Date(formattedDateValue);\n              let longTimeframe = formattedDate.toUTCString();\n              let displayedTimeframe = longTimeframe.substring(5, 16);\n              timeframe_data.push(displayedTimeframe);\n            };\n          \n            // DATASET 1 TVL EXTRACTION -- DATASET 1 TVL EXTRACTION\n            for (const chainOneTvl of firstDatasetResponse) {\n              let TVL = chainOneTvl[TvlExtractionKey]\n              totalValueLockedOne.push(TVL);\n            };\n\n            let TvlObjectOne = {\n              label: `TVL of ${firstDisplayedTVL}`,\n              data: totalValueLockedOne,\n              fill: false,\n              pointRadius: 0,\n              borderWidth: 1,\n              backgroundColor: '#FFFFFF',\n              borderColor: '#FFFFFF',\n              yAxisID: 'y'\n            };\n            TVL_data.push(TvlObjectOne);\n\n            // DATASET 2 TVL EXTRACTION -- DATASET 2 TVL EXTRACTION\n\n            // add more data to the shorter timeframe TVL\n            let addedTimeValueForTwo = firstDatasetResponse.length - secondDatasetResponse.length;\n            for (let i = 0; i < addedTimeValueForTwo; i++) {\n              totalValueLockedTwo.push('0');\n            }           \n\n            for (const chainTwoTvl of secondDatasetResponse) {\n              let TVL = chainTwoTvl[TvlExtractionKey];\n              totalValueLockedTwo.push(TVL);\n            };\n\n            let TvlObjectTwo = {\n              label: `TVL of ${secondDisplayedTVL}`,\n              data: totalValueLockedTwo,\n              fill: false,\n              pointRadius: 0,\n              borderWidth: 1,\n              backgroundColor: '#FF0000',\n              borderColor: '#FF0000',\n              yAxisID: 'y'\n            };\n            TVL_data.push(TvlObjectTwo);  \n\n            // change TVL data to fit timeframe\n            if (timeframe_data.length > selectedTimePeriod) {\n              let removeItems = timeframe_data.length - selectedTimePeriod;\n              totalValueLockedOne.splice(0, removeItems);\n              totalValueLockedTwo.splice(0, removeItems);\n            };\n            \n            // change time data to fit timeframe\n            if (timeframe_data.length > selectedTimePeriod) {\n              let removeItems = timeframe_data.length - selectedTimePeriod;\n              timeframe_data.splice(0, removeItems);\n            };  \n\n          } \n          else { // IF THE SECOND DATASET IS LONGER\n\n            totalValueLockedOne = [];\n            totalValueLockedTwo = [];\n            TVL_data = [];\n            timeframe_data = [];\n            \n            for (const timeframe of secondDatasetResponse) {\n              let epochTimeframe = timeframe['date'];\n              let startingDate = new Date(0);\n              let formattedDateValue = startingDate.setUTCSeconds(epochTimeframe);\n              let formattedDate = new Date(formattedDateValue);\n              let longTimeframe = formattedDate.toUTCString();\n              let displayedTimeframe = longTimeframe.substring(5, 16);\n              timeframe_data.push(displayedTimeframe);\n            };      \n\n            // DATASET 1 TVL EXTRACTION -- DATASET 1 TVL EXTRACTION\n\n            // add more data to the shorter timeframe TVL\n            let addedTimeValueForOne = secondDatasetResponse.length - firstDatasetResponse.length;\n            for (let i = 0; i < addedTimeValueForOne; i++) {\n              totalValueLockedOne.push('0');\n            };\n\n            for (const chainOneTvl of firstDatasetResponse) {\n              let TVL = chainOneTvl[TvlExtractionKey]\n              totalValueLockedOne.push(TVL);\n            };             \n\n            let TvlObjectOne = {\n              label: `TVL of ${firstDisplayedTVL}`,\n              data: totalValueLockedOne,\n              fill: false,\n              pointRadius: 0,\n              borderWidth: 1,\n              backgroundColor: '#FFFFFF',\n              borderColor: '#FFFFFF',\n              yAxisID: 'y'\n            };\n            TVL_data.push(TvlObjectOne);\n\n            // DATASET 2 TVL EXTRACTION -- DATASET 2 TVL EXTRACTION\n            for (const chainTwoTvl of secondDatasetResponse) {\n              let TVL = chainTwoTvl[TvlExtractionKey];\n              totalValueLockedTwo.push(TVL);\n            };\n\n            let TvlObjectTwo = {\n              label: `TVL of ${secondDisplayedTVL}`,\n              data: totalValueLockedTwo,\n              fill: false,\n              pointRadius: 0,\n              borderWidth: 1,\n              backgroundColor: '#FF0000',\n              borderColor: '#FF0000',\n              yAxisID: 'y'\n            };\n            TVL_data.push(TvlObjectTwo); \n\n            // change TVL data to fit timeframe\n            if (timeframe_data.length > selectedTimePeriod) {\n              let removeItems = timeframe_data.length - selectedTimePeriod;\n              totalValueLockedOne.splice(0, removeItems);\n              totalValueLockedTwo.splice(0, removeItems);\n            };            \n            \n            // change time data to fit timeframe\n            if (timeframe_data.length > selectedTimePeriod) {\n              let removeItems = timeframe_data.length - selectedTimePeriod;\n              timeframe_data.splice(0, removeItems);\n            };            \n\n          };\n\n          // UPDATE CHART\n          compareTvlChart.data.datasets = TVL_data;\n          compareTvlChart.data.labels = timeframe_data;\n          compareTvlChart.update();\n\n        } \n        catch(error) {\n          console.log(error);\n          console.log('Could not fetch historical TVL data...')\n        }\n\n      }\n      fetchHistoricalData();\n\n      // change timeframe of chart\n      const compareTVLTimeframeList = document.querySelector('.compareTVLTimeframeList');\n      compareTVLTimeframeList.addEventListener('change', changeTimeframe);\n      function changeTimeframe() {\n\n        // change timeframe value\n        selectedTimePeriod = compareTVLTimeframeList.options[compareTVLTimeframeList.selectedIndex].value;\n        let takeawayValue = Number(timeframe_data.length) - Number(selectedTimePeriod);\n        timeframe_data.splice(0, takeawayValue);\n\n        fetchHistoricalData();\n      };\n\n      // Change how the TVL data is aggregated\n      const totalValueLockedAggInputContainer = document.querySelector('.totalValueLockedAggInputContainer');\n      totalValueLockedAggInputContainer.addEventListener('click', fetchHistoricalData);\n\n      // CHART FOR THE TVL COMPARISON\n      const compareTotalValueLockedCanvas = document.querySelector('.compareChainTVL');\n      let compareTvlChart = new Chart(compareTotalValueLockedCanvas, {\n        type: 'line',\n        data: {\n          labels: timeframe_data,\n          datasets: TVL_data,\n        },\n        options: {\n          type: chartScale,\n          display: true,\n          position: 'left',\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              grid: {\n                color: '#232323',\n              },\n              ticks: {\n                // Include a dollar sign in the ticks\n                callback: function(value, index, values) {\n                  return '$' + value / 1e9 + ' ' + 'B';\n                }\n            }\n            }\n          }\n        }\n      });\n      window.addEventListener(\"resize\", (event) => {\n        compareTotalValueLockedCanvas.style.width = '100%';\n        compareTotalValueLockedCanvas.style.height = '100%';\n      });\n\n\n      // End of intersection observer\n    }\n  })\n}, dataPageOptions);\nconst totalValueLockedContainer = document.querySelector('.totalValueLockedContainer');\ntotalvalueLockedObserver.observe(totalValueLockedContainer);","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}