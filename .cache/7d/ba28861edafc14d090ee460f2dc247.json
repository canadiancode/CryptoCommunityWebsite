{"id":"../node_modules/@iarna/toml/lib/create-date.js","dependencies":[{"name":"/Users/kevin/Desktop/Devanada/CryptoCommunityWebsite/package.json","includedInParent":true,"mtime":1672818813687},{"name":"/Users/kevin/Desktop/Devanada/CryptoCommunityWebsite/node_modules/@iarna/toml/package.json","includedInParent":true,"mtime":1672818810589},{"name":"./format-num.js","loc":{"line":2,"column":18,"index":31},"parent":"/Users/kevin/Desktop/Devanada/CryptoCommunityWebsite/node_modules/@iarna/toml/lib/create-date.js","resolved":"/Users/kevin/Desktop/Devanada/CryptoCommunityWebsite/node_modules/@iarna/toml/lib/format-num.js"}],"generated":{"js":"var global = arguments[3];\n'use strict'\nconst f = require('./format-num.js')\nconst DateTime = global.Date\n\nclass Date extends DateTime {\n  constructor (value) {\n    super(value)\n    this.isDate = true\n  }\n  toISOString () {\n    return `${this.getUTCFullYear()}-${f(2, this.getUTCMonth() + 1)}-${f(2, this.getUTCDate())}`\n  }\n}\n\nmodule.exports = value => {\n  const date = new Date(value)\n  /* istanbul ignore if */\n  if (isNaN(date)) {\n    throw new TypeError('Invalid Datetime')\n  } else {\n    return date\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@iarna/toml/lib/create-date.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@iarna/toml/lib/create-date.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@iarna/toml/lib/create-date.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@iarna/toml/lib/create-date.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@iarna/toml/lib/create-date.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@iarna/toml/lib/create-date.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@iarna/toml/lib/create-date.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@iarna/toml/lib/create-date.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@iarna/toml/lib/create-date.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@iarna/toml/lib/create-date.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@iarna/toml/lib/create-date.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@iarna/toml/lib/create-date.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@iarna/toml/lib/create-date.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@iarna/toml/lib/create-date.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@iarna/toml/lib/create-date.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@iarna/toml/lib/create-date.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@iarna/toml/lib/create-date.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@iarna/toml/lib/create-date.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@iarna/toml/lib/create-date.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@iarna/toml/lib/create-date.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@iarna/toml/lib/create-date.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@iarna/toml/lib/create-date.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@iarna/toml/lib/create-date.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@iarna/toml/lib/create-date.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}}],"sources":{"../node_modules/@iarna/toml/lib/create-date.js":"'use strict'\nconst f = require('./format-num.js')\nconst DateTime = global.Date\n\nclass Date extends DateTime {\n  constructor (value) {\n    super(value)\n    this.isDate = true\n  }\n  toISOString () {\n    return `${this.getUTCFullYear()}-${f(2, this.getUTCMonth() + 1)}-${f(2, this.getUTCDate())}`\n  }\n}\n\nmodule.exports = value => {\n  const date = new Date(value)\n  /* istanbul ignore if */\n  if (isNaN(date)) {\n    throw new TypeError('Invalid Datetime')\n  } else {\n    return date\n  }\n}\n"},"lineCount":25}},"error":null,"hash":"4c7474cc660dfe4642a227ebd282fb2a","cacheData":{"env":{}}}